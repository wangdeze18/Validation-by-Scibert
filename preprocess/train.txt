{"text": "recipe list selection string message { string user selection input output message ; recipe ; { recipe integer parse user selection ; recipe recipe { } { recipe ; } } format exception { system println select ; recipe ; } recipe ;   pass prompt user deal recipe list user selected", "metadata": [], "label": "NOT_COHERENT"}
{"text": "check inventory { system println coffee maker check inventory ; main menu ;   check inventory user process input", "metadata": [], "label": "NOT_COHERENT"}
{"text": "synchronized coffee recipe purchase amt paid { change ; recipe recipe purchase null { change amt paid ; } recipe recipe purchase price amt paid { inventory ingredient recipe recipe purchase { change amt paid recipe recipe purchase price ; } { change amt paid ; } } { change amt paid ; } change ;   change user beverage purchase user money beverage param param amt paid", "metadata": [], "label": "COHERENT"}
{"text": "synchronized add inventory string amt coffee string amt milk string amt sugar string amt chocolate inventory exception { inventory add coffee amt coffee ; inventory add milk amt milk ; inventory add sugar amt sugar ; inventory add chocolate amt chocolate ;   true inventory wa param amt coffee param amt milk param amt sugar param amt chocolate", "metadata": [], "label": "NOT_COHERENT"}
{"text": "synchronized string check inventory { inventory string ;   inventory coffee maker inventory", "metadata": [], "label": "COHERENT"}
{"text": "string edit recipe recipe edit recipe { recipe book edit recipe recipe edit ;   edited recipe null recipe edited", "metadata": [], "label": "COHERENT"}
{"text": "coffee maker { recipe book recipe book ; inventory inventory ;   constructor coffee maker", "metadata": [], "label": "COHERENT"}
{"text": "add recipe recipe { recipe book add recipe ;   true recipe list recipe coffee maker false", "metadata": [], "label": "COHERENT"}
{"text": "amt coffee { amt coffee ;   amt coffee", "metadata": [], "label": "COHERENT"}
{"text": "set amt milk string milk recipe exception { amt milk ; { amt milk integer parse milk ; } format exception { recipe exception unit milk positive integer ; } amt milk { amt milk amt milk ; } { recipe exception unit milk positive integer ;   incoherencetype", "metadata": [], "label": "NOT_COHERENT"}
{"text": "amt milk { amt milk ;   amt milk", "metadata": [], "label": "COHERENT"}
{"text": "amt sugar { amt sugar ;   amt sugar", "metadata": [], "label": "COHERENT"}
{"text": "string { ;   ", "metadata": [], "label": "COHERENT"}
{"text": "amt chocolate { amt chocolate ;   amt chocolate", "metadata": [], "label": "COHERENT"}
{"text": "set string { null { ;   set", "metadata": [], "label": "NOT_COHERENT"}
{"text": "recipe { ; price ; amt coffee ; amt milk ; amt sugar ; amt chocolate ;   creates recipe coffee maker", "metadata": [], "label": "COHERENT"}
{"text": "synchronized set milk milk { milk { inventory milk milk ;   set milk unit inventory amount", "metadata": [], "label": "COHERENT"}
{"text": "chocolate { chocolate ;   current chocolate unit inventory", "metadata": [], "label": "COHERENT"}
{"text": "synchronized add sugar string sugar inventory exception { amt sugar ; { amt sugar integer parse sugar ; } format exception { inventory exception unit sugar positive integer ; } amt sugar { inventory sugar amt sugar ; } { inventory exception unit sugar positive integer ;   add sugar unit inventory current amount sugar unit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "synchronized set sugar sugar { sugar { inventory sugar sugar ;   set sugar unit inventory amount", "metadata": [], "label": "NOT_COHERENT"}
{"text": "sugar { sugar ;   current sugar unit inventory", "metadata": [], "label": "COHERENT"}
{"text": "synchronized set coffee coffee { coffee { inventory coffee coffee ;   set coffee unit inventory amount", "metadata": [], "label": "COHERENT"}
{"text": "synchronized set chocolate chocolate { chocolate { inventory chocolate chocolate ;   set chocolate unit inventory amount", "metadata": [], "label": "COHERENT"}
{"text": "coffee { coffee ;   current coffee unit inventory", "metadata": [], "label": "COHERENT"}
{"text": "milk { milk ;   current milk unit inventory", "metadata": [], "label": "COHERENT"}
{"text": "synchronized ingredient recipe { true ; inventory coffee amt coffee { false ; } inventory milk amt milk { false ; } inventory sugar amt sugar { false ; } inventory chocolate amt chocolate { false ; } ;   true ingredient beverage", "metadata": [], "label": "COHERENT"}
{"text": "synchronized add milk string milk inventory exception { amt milk ; { amt milk integer parse milk ; } format exception { inventory exception unit milk positive integer ; } amt milk { inventory milk amt milk ; } { inventory exception unit milk positive integer ;   add milk unit inventory current amount milk unit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "inventory { set coffee ; set milk ; set sugar ; set chocolate ;   creates coffee maker inventory object fill item inventory unit", "metadata": [], "label": "COHERENT"}
{"text": "synchronized add coffee string coffee inventory exception { amt coffee ; { amt coffee integer parse coffee ; } format exception { inventory exception unit coffee positive integer ; } amt coffee { inventory coffee amt coffee ; } { inventory exception unit coffee positive integer ;   add coffee unit inventory current amount coffee unit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "finalize throwable { reader null ; resolver null ; buffer null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "finalize throwable { reader null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "read buffer offset size io exception { data { ; } read ; offset size buffer length { size buffer length offset ; } read size { ch reader read ; ch { ch reader read ; ch { data true ; ; } reader unread ch ; } buffer read ch ; read ; } read { read ; } read ;   read block data", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml entity resolver parameter entity resolver { parameter entity resolver ;   parameter entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "attribute string key string string system nr { property prop property current element peek ; prop key key { prop remove key ;   attribute ha current element", "metadata": [], "label": "COHERENT"}
{"text": "validator { attribute hashtable ; current element stack ; parameter entity resolver xml entity resolver ;   creates quot validator quot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element started string string system nr { property attribs property attribute ; attribs null { attribs property ; } { attribs property attribs clone ; } current element push attribs ;   element ha started", "metadata": [], "label": "COHERENT"}
{"text": "element attribute processed string property extra attribute string system nr { property prop property current element pop ; enumeration enm prop key ; enm ha element { string key string enm element ; extra attribute key prop key ;   method called attribute xml element processed", "metadata": [], "label": "COHERENT"}
{"text": "set parameter entity resolver ixml entity resolver resolver { parameter entity resolver resolver ;   set parameter entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "finalize throwable { parameter entity resolver null ; attribute ; attribute null ; current element ; current element null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "string element { element ;   element validation violated", "metadata": [], "label": "COHERENT"}
{"text": "string attribute { attribute ;   attribute validation violated", "metadata": [], "label": "COHERENT"}
{"text": "xml validation exception error type string system nr string element string attribute string attribute string msg { system nr null msg element null element element attribute null attribute attribute attribute null attribute false ; element element ; attribute attribute ; attribute attribute ;   creates exception", "metadata": [], "label": "COHERENT"}
{"text": "finalize throwable { element null ; attribute null ; attribute null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "error closing tag empty string system nr xml parse exception { xml parse exception system nr closing tag empty ;   xml parse exception extra data encountered closing tag", "metadata": [], "label": "COHERENT"}
{"text": "error unexpected pc data string system nr string parent element xml validation exception { xml validation exception xml validation exception unexpected pcdata system nr element null attribute null attribute null unexpected pcdata element parent element ;   xml validation exception pcdata element wa unexpected", "metadata": [], "label": "COHERENT"}
{"text": "error unexpected cdata string system nr xml parse exception { xml parse exception system nr cdata expected ;   xml parse exception cdata unexpected", "metadata": [], "label": "COHERENT"}
{"text": "error unexpected attribute string system nr string element string attribute xml validation exception { xml validation exception xml validation exception unexpected attribute system nr element attribute attribute null element element expect attribute named attribute ;   xml validation exception attribute unexpected", "metadata": [], "label": "COHERENT"}
{"text": "error wrong closing tag string system nr string expected string wrong xml parse exception { xml parse exception system nr closing tag doe match tag wrong expected ;   xml parse exception closing tag element doe match tag", "metadata": [], "label": "COHERENT"}
{"text": "read ixml reader reader entity io exception xml parse exception { string str xml util read reader entity ; ch str ; ch entity { xml util error unexpected entity reader system reader nr str ; } ch ;   read character reader disallowing entity", "metadata": [], "label": "NOT_COHERENT"}
{"text": "update application enabled { fire property change enabled enabled enabled ;   update enabled action depending enabled application", "metadata": [], "label": "COHERENT"}
{"text": "check literal ixml reader reader string literal io exception xml parse exception { ; literal length ; { reader read literal { false ; } } true ;   true data start literal", "metadata": [], "label": "NOT_COHERENT"}
{"text": "enabled { app null app enabled enabled ;   true action enabled", "metadata": [], "label": "COHERENT"}
{"text": "install application listener application app { application listener null { application listener create application listener ; } app add property change listener weak property change listener application listener ;   installs listener application object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "uninstall application listener application app { app remove property change listener application listener ;   installs listener application object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "application action application app { app app ; install application listener app ; update application enabled ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string scan system ixml reader reader io exception xml parse exception { xml util check literal reader ystem { null ; } xml util skip whitespace reader null ; xml util scan string reader null ;   scan system", "metadata": [], "label": "NOT_COHERENT"}
{"text": "skip comment ixml reader reader io exception xml parse exception { reader read { xml util error expected input reader system reader nr ; } dash read ; ; ; { ch reader read ; ch { dash read ; ; dash read { ; } dash read ;   skip remainder comment", "metadata": [], "label": "COHERENT"}
{"text": "error unexpected element string system nr string parent element string unexpected element xml validation exception { xml validation exception xml validation exception unexpected element system nr unexpected element attribute null attribute null unexpected unexpected element parent element ;   xml validation exception element unexpected", "metadata": [], "label": "COHERENT"}
{"text": "error invalid input string system nr string unexpected string xml parse exception { xml parse exception system nr invalid input unexpected string ;   xml parse exception string expected", "metadata": [], "label": "COHERENT"}
{"text": "error expected input string system nr string expected string xml parse exception { xml parse exception system nr expected expected string ;   xml parse exception expected string encountered", "metadata": [], "label": "COHERENT"}
{"text": "error unexpected entity string system nr string entity xml parse exception { xml parse exception system nr entity reference expected entity ;   xml parse exception entity reference unexpected", "metadata": [], "label": "COHERENT"}
{"text": "string scan identifier ixml reader reader io exception xml parse exception { string buffer result string buffer ; ; ; { ch reader read ; ch ch ch ch ch ch ch ch ch ch ch { result append ch ; } { reader unread ch ; ; } } result string ;   retrieves identifier data", "metadata": [], "label": "COHERENT"}
{"text": "skip tag ixml reader reader io exception xml parse exception { level ; level { ch reader read ; ch { level ; ; level ; ;   skip remainder current xml tag", "metadata": [], "label": "COHERENT"}
{"text": "set view string { string view ; view ; fire property change view property ;   method application startup performance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "uri chooser create chooser application view { create chooser ;   create chooser", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml parse exception string msg { msg ;   creates exception", "metadata": [], "label": "COHERENT"}
{"text": "add disposable disposable disposable { disposable null { disposable linked list disposable ; } disposable add disposable ;   add disposable object disposed view disposed", "metadata": [], "label": "COHERENT"}
{"text": "init component { set layout java awt border layout ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ha unsaved change { ha unsaved change ;   true view ha unsaved change", "metadata": [], "label": "COHERENT"}
{"text": "execute runnable worker { executor null { executor executor single thread executor ; } executor execute worker ;   executes runnable worker thread view", "metadata": [], "label": "COHERENT"}
{"text": "external entity string { object obj entity ; obj java lang string ;   true entity external", "metadata": [], "label": "COHERENT"}
{"text": "suppress warning unchecked dispose { executor null { executor shutdown ; executor null ; } disposable null { disposable linked list disposable disposable clone { dispose ; } disposable null ; } remove ;   rid resource view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add internal entity string string { entity key { entity ;   add internal entity", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml entity resolver { entity hashtable ; entity amp ; ; entity quot ; ; entity apos ; ; entity lt ; ; entity gt ; ;   initializes resolver", "metadata": [], "label": "NOT_COHERENT"}
{"text": "reader entity ixml reader xml reader string xml parse exception { object obj entity ; obj null { null ; } obj java lang string { string reader string obj ; } { string string obj ; external entity xml reader ;   java reader entity", "metadata": [], "label": "NOT_COHERENT"}
{"text": "finalize throwable { entity ; entity null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "xml writer output stream stream { writer print writer stream ;   creates xml writer", "metadata": [], "label": "COHERENT"}
{"text": "write ixml element xml io exception { write xml false true ;   writes xml element", "metadata": [], "label": "COHERENT"}
{"text": "xml writer writer writer { writer print writer { writer print writer writer ; } { writer print writer writer ;   creates xml writer", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string namespace { namespace ;   namespace element", "metadata": [], "label": "COHERENT"}
{"text": "add separator menu { client property separator true ;   add separator supplied menu", "metadata": [], "label": "COHERENT"}
{"text": "add action menu view view string action { add action action view action ;   add action menu item supplied menu", "metadata": [], "label": "COHERENT"}
{"text": "set active view view { view active view ; active view null { active view deactivate ; } active view ; active view null { active view activate ; } fire property change active view property ;   set active view", "metadata": [], "label": "COHERENT"}
{"text": "string attribute type string string namespace { xml attribute attr attribute namespace ; attr null { null ; } { attr type ;   type attribute", "metadata": [], "label": "COHERENT"}
{"text": "add child ixml element child { child null { illegal argument exception child null ; } child null child empty { ixml element child ixml element child child size ; child null { child set content child content child content ; ; } } xml element child parent ; child add child ;   add child element", "metadata": [], "label": "COHERENT"}
{"text": "add action menu action { null { client property separator true { add separator ; client property separator null ; } menu item mi ; mi add ; mi set icon null ; mi set tool text null ;   add action menu item supplied menu", "metadata": [], "label": "NOT_COHERENT"}
{"text": "view active view { active view ;   active view", "metadata": [], "label": "COHERENT"}
{"text": "remove child { child remove ;   remove child located", "metadata": [], "label": "COHERENT"}
{"text": "ixml element parent { parent ;   parent element", "metadata": [], "label": "COHERENT"}
{"text": "set attribute string string { xml attribute attr attribute ; attr null { attr xml attribute null cdata ; attribute add attr ; } { attr set ;   set attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add menu item menu menu item mi { mi null { client property separator true { add separator ; client property separator null ; } add mi ;   add action menu item supplied menu", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string { ;   element", "metadata": [], "label": "COHERENT"}
{"text": "attribute string { string attribute integer string ; integer parse ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "xml element string { null null ;   creates empty element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml element { null null null ;   creates empty element pcdata content", "metadata": [], "label": "COHERENT"}
{"text": "string content { content ;   pcdata content element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property attribute namespace string namespace { property result property ; iterator enm attribute iterator ; enm ha { xml attribute attr xml attribute enm ; namespace null { attr namespace null { result attr attr ; } } { namespace equal attr namespace { result attr attr ; } } } result ;   attribute specific namespace property object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "nr { nr ;   data element started", "metadata": [], "label": "COHERENT"}
{"text": "string attribute namespace string { xml attribute attr attribute ; attr null { null ; } { attr namespace ;   namespace attribute", "metadata": [], "label": "COHERENT"}
{"text": "array list child named string { array list result array list child size ; iterator enm child iterator ; enm ha { ixml element child ixml element enm ; string child child ; child null child equal { result add child ; } } result ;   vector child iterator named", "metadata": [], "label": "COHERENT"}
{"text": "string attribute string string namespace string { xml attribute attr attribute namespace ; attr null { ; } { attr ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "attribute string string namespace { string attribute namespace integer string ; integer parse ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "attribute count { attribute size ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "xml element string string system nr { null system nr ;   creates empty element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml element string string namespace string system nr { attribute array list ; child array list ; ; namespace null { ; } { ; { substring ; } { ; } } namespace namespace ; content null ; nr nr ; system system ; parent null ;   creates empty element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml element create element string { xml element ;   creates empty element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set string string namespace { ; namespace null { ; } { substring ; } ; namespace namespace ;   set", "metadata": [], "label": "NOT_COHERENT"}
{"text": "remove attribute string { ; attribute size ; { xml attribute attr xml attribute attribute ; attr equal { attribute remove ; ;   remove attribute", "metadata": [], "label": "COHERENT"}
{"text": "ixml element create element string string namespace { xml element namespace ;   creates empty element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property attribute { property result property ; iterator enm attribute iterator ; enm ha { xml attribute attr xml attribute enm ; result attr attr ; } result ;   attribute property object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "leaf { child empty ;   element leaf element", "metadata": [], "label": "COHERENT"}
{"text": "xml attribute attribute string { iterator enm attribute iterator ; enm ha { xml attribute attr xml attribute enm ; attr equal { attr ; } } null ;   search attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml attribute attribute string string namespace { iterator enm attribute iterator ; enm ha { xml attribute attr xml attribute enm ; attr equal ; namespace null { attr namespace null ; } { namespace equal attr namespace ; } { attr ; } } null ;   search attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "child count { child size ;   child", "metadata": [], "label": "COHERENT"}
{"text": "object attribute string string namespace map set string key { string key attribute namespace null ; key null set key key { set key ; } set key ;   attribute key hashtable", "metadata": [], "label": "COHERENT"}
{"text": "string attribute string { attribute null ;   ", "metadata": [], "label": "COHERENT"}
{"text": "remove attribute string string namespace { ; attribute size ; { xml attribute attr xml attribute attribute ; attr equal ; namespace null { attr namespace null ; } { attr namespace equal namespace ; } { attribute remove ; ;   remove attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string attribute type string { xml attribute attr attribute ; attr null { null ; } { attr type ;   type attribute", "metadata": [], "label": "COHERENT"}
{"text": "ixml element child array bound exception { ixml element child ;   child specific", "metadata": [], "label": "COHERENT"}
{"text": "iterator iterate child { child iterator ;   enumeration child iterator", "metadata": [], "label": "COHERENT"}
{"text": "insert child ixml element child { child null { illegal argument exception child null ; } child null child empty { ixml element child ixml element child child size ; child null { child set content child content child content ; ; } } xml element child parent ; child add child ;   insert child element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string attribute string string { xml attribute attr attribute ; attr null { ; } { attr ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "set attribute string string namespace string { ; string substring ; xml attribute attr attribute namespace ; attr null { attr xml attribute namespace cdata ; attribute add attr ; } { attr set ;   set attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml reader string reader string str { std xml reader string reader str ;   creates reader string input", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml reader file reader string filename file exception io exception { std xml reader std xml reader file input stream filename ; set system filename ; ; reader size ; { stacked reader sr stacked reader reader element ; sr system current reader system ; } ;   creates reader file input", "metadata": [], "label": "COHERENT"}
{"text": "string system { current reader system string ;   current system", "metadata": [], "label": "COHERENT"}
{"text": "nr { current reader reader null { stacked reader sr stacked reader reader peek ; sr reader null { ; } { sr reader ; } } current reader reader ;   data current stream", "metadata": [], "label": "COHERENT"}
{"text": "unread ch io exception { current reader pb reader unread ch ;   push character read stream", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read io exception { ch current reader pb reader read ; ch { reader empty { io exception unexpected eof ; } current reader pb reader close ; current reader stacked reader reader pop ; ch current reader pb reader read ; } ch ;   read character", "metadata": [], "label": "NOT_COHERENT"}
{"text": "eof io exception { ch current reader pb reader read ; ch { reader empty { true ; } current reader pb reader close ; current reader stacked reader reader pop ; ch current reader pb reader read ; } current reader pb reader unread ch ; false ;   true character left read", "metadata": [], "label": "COHERENT"}
{"text": "finalize throwable { current reader reader null ; current reader pb reader null ; current reader system null ; current reader null ; current reader null ; reader ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "invalid attribute string system nr string element string attribute string attribute xml validation exception { xml util error invalid attribute system nr element attribute attribute ;   xml validation exception attribute ha invalid", "metadata": [], "label": "COHERENT"}
{"text": "ixml validator delegate { delegate ;   delegate", "metadata": [], "label": "COHERENT"}
{"text": "set parameter entity resolver ixml entity resolver resolver { delegate set parameter entity resolver resolver ;   set parameter entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "ixml entity resolver parameter entity resolver { delegate parameter entity resolver ;   parameter entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "validator plugin { delegate null ;   initializes plugin", "metadata": [], "label": "NOT_COHERENT"}
{"text": "finalize throwable { delegate null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "set delegate ixml validator delegate { delegate delegate ;   set delegate", "metadata": [], "label": "COHERENT"}
{"text": "unexpected attribute string system nr string element string attribute xml validation exception { xml util error unexpected attribute system nr element attribute ;   xml validation exception attribute unexpected", "metadata": [], "label": "COHERENT"}
{"text": "std xml builder { xml element ;   creates builder", "metadata": [], "label": "COHERENT"}
{"text": "std xml builder ixml element prototype { stack null ; root null ; prototype prototype ;   creates builder", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element string string prefix string uri { ixml element elt ixml element stack pop ; elt child count { ixml element child elt child ; child null { elt set content child content ; elt remove child ;   method called xml elemnt encountered", "metadata": [], "label": "NOT_COHERENT"}
{"text": "start building string system nr { stack stack ; root null ;   method called parser start processing input", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set reader ixml reader reader { reader reader ;   set reader parser retrieves data", "metadata": [], "label": "COHERENT"}
{"text": "set resolver ixml entity resolver resolver { entity resolver resolver ;   set entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "scan tag cdata string namespace property namespaces exception { string str xml util read reader ; ch str ; ch { xml util error unexpected entity reader system reader nr str ; } ch { process pi ; ; process special tag cdata ; ; reader unread ch ; process element namespace namespaces ;   scan xml tag", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml entity resolver resolver { entity resolver ;   entity resolver", "metadata": [], "label": "COHERENT"}
{"text": "std xml parser { builder null ; validator null ; reader null ; entity resolver xml entity resolver ;   creates parser", "metadata": [], "label": "COHERENT"}
{"text": "ixml validator validator { validator ;   validator validates xml data", "metadata": [], "label": "COHERENT"}
{"text": "process cdata exception { xml util check literal reader cdata { xml util error expected input reader system reader nr cdata ; } validator pc data reader system reader nr ; reader reader cdata reader reader ; builder add pc data reader reader system reader nr ; reader close ;   process cdata", "metadata": [], "label": "NOT_COHERENT"}
{"text": "process pi exception { xml util skip whitespace reader null ; string target xml util scan identifier reader ; xml util skip whitespace reader null ; reader reader pi reader reader ; target equal ignore xml { builder processing instruction target reader ; } reader close ;   process processing instruction", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object parse xml exception { { builder start building reader system reader nr ; scan data ; builder result ; } xml exception { ; } exception { xml exception error xml exception ; error init ; error ;   par data builder create logical data structure", "metadata": [], "label": "COHERENT"}
{"text": "ixml reader reader { reader ;   reader parser retrieves data", "metadata": [], "label": "COHERENT"}
{"text": "process special tag cdata exception { string str xml util read reader ; ch str ; ch { xml util error unexpected entity reader system reader nr str ; } ch { cdata { process cdata ; } { xml util error unexpected cdata reader system reader nr ; } ; process doc type ; ; xml util skip comment reader ; ;   process tag start bang", "metadata": [], "label": "NOT_COHERENT"}
{"text": "install view listener view { install view listener ; action undo action view action map ; undo action view null undo action view { undo action view add property change listener redo action property listener ;   installs listener view object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml attribute string string string namespace string string type { ; ; namespace namespace ; ; type type ;   creates attribute", "metadata": [], "label": "COHERENT"}
{"text": "undo action application app view view { app view ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set string { ;   set attribute", "metadata": [], "label": "COHERENT"}
{"text": "string { ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "string namespace { namespace ;   namespace attribute", "metadata": [], "label": "COHERENT"}
{"text": "string { ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "selection action { null ;   creates instance focused component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "copy action component target { target ; resource bundle util label resource bundle util bundle org jhotdraw app label ; label configure action ;   creates instance component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string build message string system nr exception string msg report params { string str msg ; report params { system null { str system system ; } nr { str nr ; } null { str exception ; } } str ;   build exception message exception occurred", "metadata": [], "label": "NOT_COHERENT"}
{"text": "copy action { null ;   creates instance focused component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml exception string system nr string msg { system nr null msg true ;   creates exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml exception string system nr exception { system nr nested exception true ;   creates exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "print stack trace print stream stream { print stack trace stream ; encapsulated exception null { stream println nested exception ; encapsulated exception print stack trace stream ;   dump exception stack output stream", "metadata": [], "label": "COHERENT"}
{"text": "string system { system ;   system xml data exception occurred", "metadata": [], "label": "COHERENT"}
{"text": "xml exception string msg { null null msg false ;   creates exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "xml exception string system nr exception string msg report params { xml exception build message system nr msg report params ; system system ; nr nr ; encapsulated exception ; msg xml exception build message system nr msg report params ;   creates exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "delete action { null ;   creates instance focused component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "{ owner ;   test contained connector", "metadata": [], "label": "NOT_COHERENT"}
{"text": "exception exception { encapsulated exception ;   encapsulated exception null exception encapsulated", "metadata": [], "label": "COHERENT"}
{"text": "connector figure owner { owner owner ;   construct connector owner figure", "metadata": [], "label": "COHERENT"}
{"text": "connection figure connection { geom center bound ;   connection", "metadata": [], "label": "NOT_COHERENT"}
{"text": "finalize throwable { system null ; encapsulated exception null ; finalize ;   clean object destroyed", "metadata": [], "label": "COHERENT"}
{"text": "figure owner { owner ;   connector owner", "metadata": [], "label": "COHERENT"}
{"text": "xml exception exception { null nested exception false ;   creates exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "nr { nr ;   xml data exception occurred", "metadata": [], "label": "NOT_COHERENT"}
{"text": "zoom editor action drawing editor editor scale factor button button { editor scale factor button true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "print application file action application app { app null ; action osx print file ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "application file action application app { app ; action osx file ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "enabled { active view null active view enabled enabled ;   true action enabled", "metadata": [], "label": "COHERENT"}
{"text": "update view view view { view ha explicitly set view null { null { uninstall view listener ; } null { install view listener ; } fire property change view property ; update enabled null enabled null enabled ; update view ;   update listener action depending current view application", "metadata": [], "label": "COHERENT"}
{"text": "uninstall view listener view { remove property change listener view listener ;   uninstalls listener view object", "metadata": [], "label": "COHERENT"}
{"text": "view action application app view view { app app ; view view ; enabled true ; view null { app add property change listener application listener ; } { view add property change listener view listener ; } update view null active view ;   creates instance view application", "metadata": [], "label": "NOT_COHERENT"}
{"text": "update enabled { fire property change enabled enabled ;   update enabled action depending enabled view", "metadata": [], "label": "COHERENT"}
{"text": "action application app { app ; resource bundle util label resource bundle util bundle org jhotdraw app label ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute change edit figure owner attribute key { owner owner ; ; ; ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "composite figure edit figure figure string presentation { presentation ; figure figure ;   creates composite figure edit presentation", "metadata": [], "label": "COHERENT"}
{"text": "composite figure edit figure figure { ; figure figure ;   creates composite figure edit significance", "metadata": [], "label": "COHERENT"}
{"text": "composite figure edit figure figure { figure figure ;   creates composite figure edit compound edit presentatio", "metadata": [], "label": "NOT_COHERENT"}
{"text": "arrow angle outer radius radius { angle outer radius radius true false true ;   construct arrow angle outer radius", "metadata": [], "label": "COHERENT"}
{"text": "arrow angle outer radius radius filled stroked solid { filled stroked solid ; angle angle ; outer radius outer radius ; radius radius ;   construct arrow parameter", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic figure { path path transformed decorator path ; color color ; filled { solid { color stroke color ; } { color fill color ; } color null { set color color ; fill path ; } } stroked { color stroke color ; color null { set color color ; set stroke attribute key stroke ; draw path ;   draw arrow direction", "metadata": [], "label": "NOT_COHERENT"}
{"text": "perpendicular bar { ;   construct perpendicular height", "metadata": [], "label": "COHERENT"}
{"text": "perpendicular bar height { false true false ; height height ;   construct perpendicular height", "metadata": [], "label": "COHERENT"}
{"text": "path decorator path figure { path path path ; half height height ; path move half height ; path half height ; path ;   calculates path decorator", "metadata": [], "label": "NOT_COHERENT"}
{"text": "composite decoration decoration decoration decoration decoration { add decoration decoration ; add decoration decoration ;   construct composite decoration supplied decoration", "metadata": [], "label": "COHERENT"}
{"text": "add decoration decoration decoration { decoration null { decoration add decoration ;   add decoration composite decoration", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic figure { decoration decoration decoration { decoration draw ;   draw arrow direction", "metadata": [], "label": "COHERENT"}
{"text": "rectangle drawing figure { rectangle null ; decoration decoration decoration { rectangle decoration drawing ; null ; add ; } ;   drawing decorator", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle multicaster handle handle { handle linked list handle ; handle add handle ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle event handle src rectangle invalidated { src ; invalidated invalidated ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "composite figure event composite figure source figure child rectangle invalidated { source ; child child ; invalidated invalidated ; ;   construct event provided composite figure", "metadata": [], "label": "COHERENT"}
{"text": "rectangle invalidated { invalidated ;   bound invalidated drawing", "metadata": [], "label": "COHERENT"}
{"text": "figure child figure { child ;   changed child figure", "metadata": [], "label": "COHERENT"}
{"text": "load file action application app view view { app view ; resource bundle util label resource bundle util bundle org jhotdraw app label ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "export file action application app view view { app view ; resource bundle util label resource bundle util bundle org jhotdraw app label ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "install application listener application app { install application listener app ; application listener null { application listener create application listener ; } app add property change listener application listener ;   installs listener application object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "invalidated figure event evt { update bound ;   region figure repainted", "metadata": [], "label": "NOT_COHERENT"}
{"text": "cursor cursor { cursor predefined cursor cursor move cursor ;   cursor handle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "load file action application app view view uri uri { app view ; uri uri ; action uri util uri ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string tool text { tool text ;   tooltip location", "metadata": [], "label": "NOT_COHERENT"}
{"text": "figure changed figure event evt { update bound ;   bound shape figure ha changed", "metadata": [], "label": "NOT_COHERENT"}
{"text": "combinable handle handle { assignable handle ;   true handle instance subclass handle", "metadata": [], "label": "COHERENT"}
{"text": "connector source { target owner start connector { owner connector ; } owner start connector ;   connection unaffected change", "metadata": [], "label": "NOT_COHERENT"}
{"text": "tool tool { tool source ;   tool source event", "metadata": [], "label": "COHERENT"}
{"text": "drawing view view { view ;   drawing view tool", "metadata": [], "label": "COHERENT"}
{"text": "bezier control handle bezier figure owner coord { owner coord owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rotate handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "color wheel image producer color system sys { null ; pixel ; ; ; color system sys ; set animated true ; pixel pixel color model rg bdefault ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bounded range model bounded range model component { component model component ;   bounded range model color component", "metadata": [], "label": "COHERENT"}
{"text": "slider component { component model component ;   color component", "metadata": [], "label": "COHERENT"}
{"text": "save file action application app view view { app view false ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "print file action application app view view { app view ; resource bundle util label resource bundle util bundle org jhotdraw app label ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "file action application app uri uri { app ; uri uri ; action uri util uri ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "toggle view property action application app view view string property { app view property type true false ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute key key { key attribute ;   attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "set attribute key key { forbidden attribute null forbidden attribute key { key attribute ; fire attribute changed key ;   set attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "attribute key key { key attribute ;   attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "set attribute key key { forbidden attribute null forbidden attribute key { object attribute key ; set attribute child key ; fire attribute changed key ;   set attribute figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "transform affine transform tx { figure child { transform tx ; } invalidate ;   transforms figure", "metadata": [], "label": "COHERENT"}
{"text": "layouter layouter { layouter ;   layouter object encapsulated layout algorithm figure", "metadata": [], "label": "COHERENT"}
{"text": "set layouter layouter layouter { layouter layouter ;   set layouter object encapsulated layout algorithm figure", "metadata": [], "label": "COHERENT"}
{"text": "remove collection extends figure figure { figure figure { remove ;   remove child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "synchronized send figure figure { basic remove figure { basic add figure ; fire invalidated figure drawing ;   sends figure composite figure", "metadata": [], "label": "COHERENT"}
{"text": "basic remove child { figure linked list figure child { basic remove ;   remove child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "java util list figure child front { child size linked list figure reversed list figure child ;   iterator iterate front child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "basic remove collection extends figure figure { figure figure { basic remove ;   remove child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "harmonic color wheel { hslryb color system ; init component ; set radial component ; set vertical component ; model set component ; set wheel inset inset ; model handler model handler ; harmonic color model harmonic color model ; set harmonic color model ; set tool text ;   creates form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connector handle connector connector connection figure prototype { connector owner ; connector connector ; prototype prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connection figure create connection { connection figure prototype clone ;   creates connection figure", "metadata": [], "label": "COHERENT"}
{"text": "connector connectable connector figure connectable figure { connector target connectable figure null null connectable figure connector connection ; connectable figure null connectable figure connectable connectable figure includes owner connection connect connector target { target ; } null ;   connection figure", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic { draw rectangle pressed color orange color white color black ; rectangle bound ; draw width height ; draw width height ;   draw handle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "close handle figure owner { owner relative locator ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "font size handle text holder figure owner { owner font size locator ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier scale handle bezier figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drag handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "disconnect { owner set connector null ;   disconnect start figure", "metadata": [], "label": "COHERENT"}
{"text": "connection handle connection figure owner { owner ;   construct connection handle start figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connect connector { owner set connector ;   set start connection", "metadata": [], "label": "COHERENT"}
{"text": "disconnect { owner set start connector null ;   disconnect start figure", "metadata": [], "label": "COHERENT"}
{"text": "set location { owner change ; owner set start ; owner changed ;   set start connection", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connect connector { owner set start connector ;   set start connection", "metadata": [], "label": "COHERENT"}
{"text": "connection start handle connection figure owner { owner ;   construct connection handle start figure", "metadata": [], "label": "COHERENT"}
{"text": "set application handler action listener reopen handler { set handler osx adapter handle application reopen handler ;   called application receives reopen application event finder application", "metadata": [], "label": "NOT_COHERENT"}
{"text": "osx adapter string proxy signature object target method handler { proxy signature proxy signature ; target object target ; target method handler ;   osx adapter ha eawt method intends listen object ultimately perform task method called object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set application handler action listener handler { set handler osx adapter handle application handler ;   action listener called application receives application event finder application", "metadata": [], "label": "NOT_COHERENT"}
{"text": "osx adapter string proxy signature action listener handler { proxy signature proxy signature ; target action handler ;   osx adapter ha eawt method intends listen object ultimately perform task method called object", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object invoke object proxy method method object args throwable { correct method method args { handled call target args ; set application event handled args handled ; } application listener method ; null null ;   invocation handler implementation", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property change edit object source string property { source property integer type ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add edit undoable edit edit { edit property change edit { property change edit property change edit edit ; source source property equal property { ; true ; } } false ;   add edit property change edit owner property", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property change edit object source string property { source property character type ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property change edit object source string property { source property type ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property change edit object source string property { source property type ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property change edit object source string property { source property type ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string presentation { presentation ;   presentation undoable edit", "metadata": [], "label": "COHERENT"}
{"text": "set presentation string presentation { presentation presentation ;   set presentation undoable edit", "metadata": [], "label": "COHERENT"}
{"text": "property change edit object source string property type { source source ; property presentation property ; type type ; ; ;   creates property change edit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add property change listener string property property change listener listener { property support add property change listener property listener ;   add property change listener optionally wrapped weak property change listener", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add property change listener property change listener listener { property support add property change listener listener ;   add property change listener optionally wrapped weak property change listener", "metadata": [], "label": "COHERENT"}
{"text": "null handle figure owner locator locator { owner locator ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add lead handle figure collection handle handle { handle add null handle relative locator ; handle add null handle relative locator ; handle add null handle relative locator ; handle add null handle relative locator ;   creates handle lead figure add provided collection", "metadata": [], "label": "COHERENT"}
{"text": "rotate handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add move handle figure collection handle handle { handle add south east ; handle add south west ; handle add north east ; handle add north west ;   creates handle corner figure add provided collection", "metadata": [], "label": "COHERENT"}
{"text": "move handle figure owner locator locator { owner locator ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text overflow handle text holder figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "cmykicc color system { { read resource stream generic cmyk profile icc ; } io exception { internal error err internal error couldn load generic cmyk profile icc ; err init ; err ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "round rectangle radius handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "color track image producer track buffer horizontal { null ; pixel ; ; ; track buffer track buffer track buffer track buffer track buffer ; component component ; horizontal horizontal ; pixel pixel direct color model red green blue ; set animated true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "tick length { ;   height tick horizontal slider width tick vertical slider", "metadata": [], "label": "NOT_COHERENT"}
{"text": "color slider ui slider { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "serialization input output format { drawing ser drawing ;   creates instance format drawing file extension xml mime type image jhotdraw", "metadata": [], "label": "COHERENT"}
{"text": "locator north { relative decorator locator ;   north", "metadata": [], "label": "NOT_COHERENT"}
{"text": "relative decorator locator relative relative { relative relative ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add scale move transform handle figure collection handle handle { add corner transform handle handle ; add edge transform handle handle ;   add handle scaling moving figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator north west { relative decorator locator ;   north west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add edge transform handle figure collection handle handle { handle add south ; handle add north ; handle add east ; handle add west ;   fill vector handle north south east west figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator west { relative decorator locator ;   west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add transform handle figure collection handle handle { handle add bound outline handle true false ; add corner transform handle handle ; add edge transform handle handle ; handle add rotate handle ;   add handle scaling moving rotating shearing figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator south west { relative decorator locator ;   south west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator south east { relative decorator locator ;   south east", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier tool bezier figure prototype { prototype null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier tool bezier figure prototype map attribute key object attribute { prototype attribute null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "tool { editor proxy drawing editor proxy ; set input map create input map ; set action map create action map ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input map create input map { null ;   method create tool specific input map input map drawing edtior", "metadata": [], "label": "COHERENT"}
{"text": "edit delete { view drawing remove view selected figure ;   deletes selection", "metadata": [], "label": "COHERENT"}
{"text": "input map input map { input map ;   input map tool", "metadata": [], "label": "COHERENT"}
{"text": "set action map action map { action map ;   set action map tool", "metadata": [], "label": "COHERENT"}
{"text": "fire invalidated rectangle { view drawing view ; view drawing view width height ; fire invalidated rectangle ;   notify listener list registered notification event type", "metadata": [], "label": "NOT_COHERENT"}
{"text": "action map action map { action map ;   action map tool", "metadata": [], "label": "COHERENT"}
{"text": "fire bound invalidated rectangle invalidated { drawing drawing ; rectangle canvas bound rectangle ; canvas width null { canvas bound width canvas width ; } canvas height null { canvas bound height canvas height ; } canvas bound invalidated { fire bound invalidated invalidated ;   notify listener list registered notification event type", "metadata": [], "label": "NOT_COHERENT"}
{"text": "image output format { png portable network graphic png png buffered image type argb ;   creates image output format portable network graphic png", "metadata": [], "label": "COHERENT"}
{"text": "write output stream drawing drawing affine transform drawing transform dimension image size io exception { write drawing drawing child drawing transform image size ;   writes drawing output stream", "metadata": [], "label": "COHERENT"}
{"text": "transferable create transferable drawing drawing java util list figure figure scale factor io exception { image transferable image drawing figure scale factor true ;   writes drawing output stream", "metadata": [], "label": "COHERENT"}
{"text": "image output format string format string description string file extension buffered image type { format format ; description description ; file extension file extension ; image type buffered image type ;   creates image output format image format", "metadata": [], "label": "COHERENT"}
{"text": "locator center { center false ;   transforming center", "metadata": [], "label": "NOT_COHERENT"}
{"text": "write file file drawing drawing io exception { buffered output stream buffered output stream file output stream file ; { write drawing ; } { close ;   writes drawing file", "metadata": [], "label": "COHERENT"}
{"text": "locator south transform { relative locator transform ;   south", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator north { north false ;   transforming north", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator south east { south east false ;   transforming south east", "metadata": [], "label": "NOT_COHERENT"}
{"text": "relative locator { false ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator south east transform { relative locator transform ;   south east", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator west { west false ;   transforming west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator north east { north east false ;   transforming north east", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator west transform { relative locator transform ;   west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "locator north west transform { relative locator transform ;   north west", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text input format text holder figure prototype { prototype text text txt false ;   creates image output format text figure", "metadata": [], "label": "COHERENT"}
{"text": "set tool creation { tool creation ; tool creation ;   set false creation tool doe fire tool figure ha created", "metadata": [], "label": "COHERENT"}
{"text": "connection tool connection figure prototype { prototype null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "suppress warning unchecked connection figure create figure { connection figure connection figure prototype clone ; editor apply attribute ; prototype attribute null { map entry attribute key object entry prototype attribute entry set { set entry key entry ; } } ;   creates connection figure", "metadata": [], "label": "COHERENT"}
{"text": "creation finished figure created figure { tool creation { fire tool ;   method subclass perform additonal user interaction figure ha created", "metadata": [], "label": "COHERENT"}
{"text": "drawing pageable drawing drawing { drawing drawing ; paper paper paper ; format format ; format set paper paper ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "create overlay drawing view view { create overlay view null ;   creates overlay container", "metadata": [], "label": "COHERENT"}
{"text": "string text { text text ;   text content overlay", "metadata": [], "label": "NOT_COHERENT"}
{"text": "create overlay drawing view view text holder figure figure { view component add edit scroll container ; edited figure figure ; view view ; edited figure null { edited figure add figure listener figure handler ; update widget ;   creates overlay container specific font", "metadata": [], "label": "COHERENT"}
{"text": "set bound rectangle string text { text set text text ; edit scroll container set bound view drawing view ; edit scroll container set visible true ; text set caret position ; text request focus ;   position size overlay", "metadata": [], "label": "NOT_COHERENT"}
{"text": "create overlay drawing view view { create overlay view null ;   creates overlay component", "metadata": [], "label": "COHERENT"}
{"text": "string text { text field text ;   text content overlay", "metadata": [], "label": "NOT_COHERENT"}
{"text": "remove action listener action listener listener { text field remove action listener listener ;   remove action listener", "metadata": [], "label": "COHERENT"}
{"text": "dimension preferred size col { text field set column col ; text field preferred size ;   preferred size overlay", "metadata": [], "label": "COHERENT"}
{"text": "curved liner { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier label locator relative position angle distance { relative position relative position ; angle angle ; distance distance ;   creates locator", "metadata": [], "label": "COHERENT"}
{"text": "relative bezier figure owner { owner path relative position ; owner path relative position relative position relative position ; dir math atan ; relative position { dir math pi ; } alpha dir angle ; distance math alpha distance math sin alpha ; ; ;   coordinate relative path bezier figure", "metadata": [], "label": "COHERENT"}
{"text": "slanted liner { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "COHERENT"}
{"text": "length { ;   square distance", "metadata": [], "label": "COHERENT"}
{"text": "oval angle rectangle angle { center geom center ; geom polar angle width height ; center center ;   oval corresponds angle", "metadata": [], "label": "COHERENT"}
{"text": "oval angle rectangle angle { center geom center ; geom polar angle width height ; center center ;   oval corresponds angle", "metadata": [], "label": "COHERENT"}
{"text": "length { sqrt length ;   distance", "metadata": [], "label": "COHERENT"}
{"text": "px py tolerance { rectangle rectangle ; add ; grow max ceil tolerance max ceil tolerance ; px py { false ; } ; { ab px tolerance ; } { ab py tolerance ; } ; ; py ; px ; min ab px ab py tolerance ;   test", "metadata": [], "label": "NOT_COHERENT"}
{"text": "polar angle fx fy { si sin angle ; angle ; fx fy si ;   convert polar", "metadata": [], "label": "COHERENT"}
{"text": "angle rectangle { px width ; py height ; atan py width px height ;   angle relative rectangle", "metadata": [], "label": "COHERENT"}
{"text": "rectangle rectangle { max width max width max height max height ;   true rectangle rectangle", "metadata": [], "label": "COHERENT"}
{"text": "angle rectangle angle { si sin angle ; angle ; ; ; ab si { ab si width ; range width ; } { width ; } ab { si ab height ; range height ; } si { height ; } ;   rectangle corresponds angle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "direction { direction ; vx ; vy ; vy vx vx vy { direction ; } vy vx vy vx { direction top ; } vx vy vx vy { direction left ; } { direction bottom ; } direction ;   direction top bottom left", "metadata": [], "label": "NOT_COHERENT"}
{"text": "angle rectangle angle { si sin angle ; angle ; ; ; ab si { ab si width ; range width ; } { width ; } ab { si ab height ; range height ; } si { height ; } ;   rectangle corresponds angle", "metadata": [], "label": "COHERENT"}
{"text": "length { sqrt length ;   distance", "metadata": [], "label": "COHERENT"}
{"text": "grow rectangle { ; ; width ; height ;   resizes rectangle horizontally vertically", "metadata": [], "label": "NOT_COHERENT"}
{"text": "outcode rectangle rectangle { outcode ; width { outcode ; } width { outcode left ; } height { outcode bottom ; } height { outcode top ; } outcode ;   method computes binary mask indicating rectangle rectangle edge rest rectangle", "metadata": [], "label": "COHERENT"}
{"text": "angle { atan ;   angle", "metadata": [], "label": "COHERENT"}
{"text": "px py tolerance { rectangle rectangle ; add ; grow max ceil tolerance ; grow ; grow ; width grow ; height grow ; px py { false ; } ; { ab px tolerance ; } { ab py tolerance ; } ; ; py ; px ; min ab px ab py tolerance ;   test", "metadata": [], "label": "NOT_COHERENT"}
{"text": "polar angle fx fy { si sin angle ; angle ; fx fy si ;   convert polar", "metadata": [], "label": "COHERENT"}
{"text": "angle rectangle { px width ; py height ; atan py width px height ;   angle relative rectangle", "metadata": [], "label": "COHERENT"}
{"text": "cap radius { angle pi atan ; radius angle radius sin angle ; ;   cap defined unit radius", "metadata": [], "label": "COHERENT"}
{"text": "length { ;   square distance", "metadata": [], "label": "COHERENT"}
{"text": "reset { npoints ; invalidate ;   reset polygon object empty polygon", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   determines inside polygon", "metadata": [], "label": "COHERENT"}
{"text": "deprecated inside { ;   determines coordinate contained polygon", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   determines coordinate inside polygon", "metadata": [], "label": "COHERENT"}
{"text": "update bound { bound { bound width bound width bound ; bound ; } { bound width math max bound width bound ; bound bound ; } bound { bound height bound height bound ; bound ; } { bound height math max bound height bound ;   resizes bounding box accomodate coordinate", "metadata": [], "label": "NOT_COHERENT"}
{"text": "translate delta delta { translate delta delta ;   translates vertex polygon delta axis delta axis", "metadata": [], "label": "COHERENT"}
{"text": "winding rule { wind odd ;   winding rule determining interior path", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   move iterator forward primary direction traversal segment path direction", "metadata": [], "label": "COHERENT"}
{"text": "current segment coords { poly npoints { seg close ; } coords poly xpoints ; coords poly ypoints ; transform null { transform transform coords coords ; } seg moveto seg lineto ;   coordinate type current path segment iteration", "metadata": [], "label": "COHERENT"}
{"text": "current segment coords { poly npoints { seg close ; } coords poly xpoints ; coords poly ypoints ; transform null { transform transform coords coords ; } seg moveto seg lineto ;   coordinate type current path segment iteration", "metadata": [], "label": "COHERENT"}
{"text": "{ poly npoints ;   test read", "metadata": [], "label": "NOT_COHERENT"}
{"text": "{ ;   move iterator forward primary direction traversal segment path direction", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object clone { { clone ; } clone supported exception { shouldn happen cloneable internal error ;   creates object object", "metadata": [], "label": "COHERENT"}
{"text": "add inset { set top top left left bottom bottom   add inset current inset", "metadata": [], "label": "COHERENT"}
{"text": "subtract rectangle { set rect left top width left height top bottom   subtracts current inset rectangle rectangle", "metadata": [], "label": "COHERENT"}
{"text": "subtract inset { set top top left left bottom bottom   subtracts inset current inset", "metadata": [], "label": "NOT_COHERENT"}
{"text": "subtract top left bottom { set top top left left bottom bottom   subtracts inset current inset", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add top left bottom { set top top left left bottom bottom   add inset current inset", "metadata": [], "label": "COHERENT"}
{"text": "set inset { set top left bottom ;   set inset", "metadata": [], "label": "COHERENT"}
{"text": "add rectangle { set rect left top width left height top bottom   add current inset rectangle rectangle larger", "metadata": [], "label": "COHERENT"}
{"text": "dimension width height { width width ; height height ;   construct dimension initializes width height", "metadata": [], "label": "COHERENT"}
{"text": "dimension dimension { width height ;   creates instance dimension width height dimension", "metadata": [], "label": "COHERENT"}
{"text": "hash code { sum width height ; bit sum sum width ;   hash code dimension", "metadata": [], "label": "COHERENT"}
{"text": "set size width height { width width ; height height ;   set size dimension object width height precision", "metadata": [], "label": "COHERENT"}
{"text": "dimension { ;   creates instance dimension width height", "metadata": [], "label": "COHERENT"}
{"text": "set size dimension { set size width height ;   set size dimension object size", "metadata": [], "label": "COHERENT"}
{"text": "height { height ;   height dimension precision", "metadata": [], "label": "COHERENT"}
{"text": "dimension size { dimension width height ;   size dimension object", "metadata": [], "label": "COHERENT"}
{"text": "equal object obj { obj dimension { dimension dimension obj ; width width height height ; } false ;   check dimension object equal", "metadata": [], "label": "COHERENT"}
{"text": "selectable { selectable ;   check figure selectable", "metadata": [], "label": "COHERENT"}
{"text": "change { changing depth { fire invalidated ; invalidate ; } changing depth ;   informs figure change affect content display box", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle mouse click mouse event evt drawing view view { false ;   handle mouse click", "metadata": [], "label": "NOT_COHERENT"}
{"text": "changed { changing depth { validate ; fire figure changed drawing ; } changing depth { internal error changed wa called prior call change changing depth ; } changing depth ;   informs figure changed display box", "metadata": [], "label": "NOT_COHERENT"}
{"text": "transformable { transformable ;   check figure transformable", "metadata": [], "label": "COHERENT"}
{"text": "connector connector connection figure prototype { chop rectangle connector ;   figure connector location", "metadata": [], "label": "COHERENT"}
{"text": "fire invalidated { fire invalidated drawing ;   notify listener list registered notification event type", "metadata": [], "label": "NOT_COHERENT"}
{"text": "collection action action { collection empty list ;   collection action user popup menu", "metadata": [], "label": "NOT_COHERENT"}
{"text": "removable { removable ;   check figure removable", "metadata": [], "label": "COHERENT"}
{"text": "string key { key ;   key string", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   attribute", "metadata": [], "label": "COHERENT"}
{"text": "suppress warning unchecked map attribute key object { key ;   attribute denoted attribute key map", "metadata": [], "label": "COHERENT"}
{"text": "attribute key string key clazz null allowed { key clazz null allowed null ;   creates instance attribute key type token allowing disallowing null", "metadata": [], "label": "COHERENT"}
{"text": "suppress warning unchecked clone figure { ; { null null clazz cast method invoke clone ; } method exception { internal error internal error ; init ; ;   clone figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set clone figure { { set null null clazz cast method invoke clone ; } method exception { internal error internal error ; init ; ;   convenience method setting clone figure", "metadata": [], "label": "COHERENT"}
{"text": "string presentation { label null key label string attribute key text ;   localized human friendly presentation key", "metadata": [], "label": "COHERENT"}
{"text": "figure { ;   attribute denoted attribute key figure", "metadata": [], "label": "COHERENT"}
{"text": "assignable object { null { null allowed ; } clazz instance ;   true assignable key", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute key string key clazz { key clazz null true ;   creates instance attribute key type token null allowing null", "metadata": [], "label": "COHERENT"}
{"text": "set figure { null null allowed { null pointer exception null allowed attribute key key ; } set ;   convenience method setting figure", "metadata": [], "label": "COHERENT"}
{"text": "null allowed { null allowed ;   true null allowed", "metadata": [], "label": "COHERENT"}
{"text": "{ path control ;   convenience method coordinate control node", "metadata": [], "label": "COHERENT"}
{"text": "bezier figure closed { path bezier path ; set path closed closed ;   creates empty bezier figure bezier path node", "metadata": [], "label": "COHERENT"}
{"text": "bezier path node node { bezier path node path clone ;   control", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set start { add node haven node node count ; ; { add node bezier path node ; } set ;   convenience method setting coordinate start", "metadata": [], "label": "COHERENT"}
{"text": "node { bezier path tp path ; ; tp size ; { bezier path node tp ; { ; } } ;   control", "metadata": [], "label": "COHERENT"}
{"text": "{ node count ;   convenience method", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set coord { bezier path node cp bezier path node path ; cp set control coord ; set node cp ;   set coordinate control", "metadata": [], "label": "NOT_COHERENT"}
{"text": "start { ;   convenience method start", "metadata": [], "label": "COHERENT"}
{"text": "set { bezier path node node path ; dx node ; dy node ; ; node length ; { node dx ; node dy ; } invalidate ;   set coordinate control node", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connector connector connection figure prototype { chop bezier connector ;   figure connector location", "metadata": [], "label": "COHERENT"}
{"text": "bezier path node remove node { path remove ;   remove node", "metadata": [], "label": "COHERENT"}
{"text": "segment tolerance { bezier path segment tolerance ;   segment polyline hit", "metadata": [], "label": "COHERENT"}
{"text": "set bound anchor lead { set start anchor ; set lead ; invalidate ;   set location bezier path node bezier figure", "metadata": [], "label": "COHERENT"}
{"text": "add node bezier path node { bezier path node bezier path node ; path add ; invalidate ;   add node list", "metadata": [], "label": "COHERENT"}
{"text": "bezier path bezier path { bezier path path clone ;   clone bezier path figure", "metadata": [], "label": "COHERENT"}
{"text": "coord { path control coord ;   coordinate control", "metadata": [], "label": "COHERENT"}
{"text": "set node bezier path node { path set ; invalidate ;   set control", "metadata": [], "label": "NOT_COHERENT"}
{"text": "join segment join tolerance { segment join tolerance ; { remove node ; true ; } false ;   join segment hit node polyline", "metadata": [], "label": "COHERENT"}
{"text": "remove node { path ;   remove", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set { add node haven node node count ; ; { add node bezier path node ; } set node count ;   convenience method setting coordinate", "metadata": [], "label": "COHERENT"}
{"text": "object lock { lock ;   drawing view synchronizes lock drawing drawing", "metadata": [], "label": "NOT_COHERENT"}
{"text": "invalidate sort { sorting true ;   invalidates sort", "metadata": [], "label": "COHERENT"}
{"text": "ensure sorted { sorting { collection sort child figure layer comparator instance ; sorting false ;   ensures child sorted sequence front", "metadata": [], "label": "COHERENT"}
{"text": "java util list figure figure front { ensure sorted ; reversed list figure child ;   iterator iterate front child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set target drawing editor { target null { target remove property change listener forwarder ; } target ; target null { target add property change listener forwarder ;   set target proxy", "metadata": [], "label": "COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "popup button create drawing color button drawing editor editor attribute key color attribute key java util list color icon swatch column count string label key resource bundle util label { create drawing color button editor attribute key swatch column count label key label null ;   creates color button action region popup menu", "metadata": [], "label": "COHERENT"}
{"text": "popup button create selection color button drawing editor editor attribute key color attribute key java util list color icon swatch column count string label key resource bundle util label { create selection color button editor attribute key swatch column count label key label null ;   creates color button action region popup menu", "metadata": [], "label": "COHERENT"}
{"text": "add alignment button tool bar bar drawing editor editor { add alignment button bar editor linked list disposable ;   creates toolbar button add tool bar", "metadata": [], "label": "NOT_COHERENT"}
{"text": "popup button create editor color button drawing editor editor attribute key color attribute key java util list color icon swatch column count string label key resource bundle util label { create editor color button editor attribute key swatch column count label key label null ;   creates color button action region popup menu", "metadata": [], "label": "COHERENT"}
{"text": "attribute action drawing editor editor attribute key key { editor key null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "update drawing { drawing null { drawing change ; drawing fire undoable edit happened canvas fill color set undoable drawing color button background ; drawing changed ;   update drawing change panel", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing drawing { drawing ;   grid constrainer edited panel", "metadata": [], "label": "NOT_COHERENT"}
{"text": "update panel { drawing null { color button set background drawing canvas fill color ;   update panel change drawing", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing attribute action drawing editor editor attribute key key object icon icon { editor key null icon ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing attribute action drawing editor editor attribute key key object { editor key null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "color icon rgb { color rgb ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing color chooser action drawing editor editor attribute key color key { editor key null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing color chooser action drawing editor editor attribute key color key string { editor key null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing color chooser action drawing editor editor attribute key color key icon icon { editor key null icon ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "toggle selection figure figure { selected figure figure { remove selection figure ; } { add selection figure ;   figure isn selected selection", "metadata": [], "label": "NOT_COHERENT"}
{"text": "view drawing { translation scale factor translation scale factor ;   convert view coordinate drawing coordinate", "metadata": [], "label": "NOT_COHERENT"}
{"text": "draw background graphic { set color background ; fill rect width height ;   draw background drawing view", "metadata": [], "label": "COHERENT"}
{"text": "rectangle canvas view bound { position coordinate view translation ; translation ; width ; height ; drawing null { cw drawing canvas width ; ch drawing canvas height ; cw null ch null { lower drawing view cw ch ; lower ; lower ; } } rectangle ;   bound canvas drawing view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set figure selected figure { collection unmodifiable set selected figure ;   current selection figure selection", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle handle { validate handle ; handle handle reversed list handle secondary handle { handle { handle ; } } handle handle reversed list handle selection handle { handle { handle ; } } null ;   handle coordinate", "metadata": [], "label": "COHERENT"}
{"text": "figure figure { drawing figure view drawing ;   figure coordinate", "metadata": [], "label": "COHERENT"}
{"text": "selection { selection count { set figure selection hash set figure selected figure ; selected figure ; set figure selection hash set figure selected figure ; invalidate handle ; fire selection changed selection selection ;   current selection", "metadata": [], "label": "NOT_COHERENT"}
{"text": "selection count { selected figure size ;   selected figure", "metadata": [], "label": "COHERENT"}
{"text": "drawing view { init component ; event handler create event handler ; set tool text dummy ; set dummy tool text tooltips set focusable true ; add focus listener event handler ; set transfer handler drawing view transfer handler ; set background color xb ; set opaque true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "java util list handle selection handle { validate handle ; collection unmodifiable list selection handle ;   active selection handle", "metadata": [], "label": "COHERENT"}
{"text": "connector connector connection figure prototype { chop diamond connector ;   figure connector location", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "column { col ;   column layout", "metadata": [], "label": "NOT_COHERENT"}
{"text": "vertical grid layout row col hgap vgap vertical { row col { illegal argument exception row col ; } row row ; col col ; hgap hgap ; vgap vgap ; vertical vertical ;   creates grid layout row column", "metadata": [], "label": "COHERENT"}
{"text": "set row row { row col { illegal argument exception row col ; } row row ;   set row layout", "metadata": [], "label": "COHERENT"}
{"text": "row { row ;   row layout", "metadata": [], "label": "COHERENT"}
{"text": "set column col { col row { illegal argument exception row col ; } col col ;   set column layout", "metadata": [], "label": "COHERENT"}
{"text": "vertical grid layout { ;   creates grid layout column component single row", "metadata": [], "label": "COHERENT"}
{"text": "hgap { hgap ;   horizontal gap component", "metadata": [], "label": "COHERENT"}
{"text": "set hgap hgap { hgap hgap ;   set horizontal gap component", "metadata": [], "label": "COHERENT"}
{"text": "vertical grid layout row col { row col ;   creates grid layout row column", "metadata": [], "label": "COHERENT"}
{"text": "synchronized set error throwable { error ;   set error thrown constrct", "metadata": [], "label": "COHERENT"}
{"text": "synchronized throwable error { error ;   error produced worker thread null hasn thrown", "metadata": [], "label": "COHERENT"}
{"text": "synchronized { ;   produced worker thread null hasn constructed", "metadata": [], "label": "NOT_COHERENT"}
{"text": "synchronized set { ;   set produced construct", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object transfer data data flavor flavor unsupported flavor exception io exception { transferable transferable transferables flavor ; null unsupported flavor exception flavor ; transfer data flavor ;   object represents data transferred", "metadata": [], "label": "COHERENT"}
{"text": "sheet dialog owner { owner ; init ;   creates sheet", "metadata": [], "label": "COHERENT"}
{"text": "document modality supported { document modality supported ;   true sheet support sheet display", "metadata": [], "label": "NOT_COHERENT"}
{"text": "message sheet component parent component object message message type sheet listener listener { message sheet parent component message message type null listener ;   brings sheet display message icon determined message type parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "animated { animated ;   true sheet transition hidden", "metadata": [], "label": "COHERENT"}
{"text": "message sheet component parent component object message message type { message sheet parent component message message type null null ;   brings sheet display message icon determined message type parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "confirm sheet component parent component object message sheet listener listener { confirm sheet parent component message option pane cancel option listener ;   brings sheet option cancel", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input sheet component parent component object message message type sheet listener listener { input sheet parent component message message type null null null listener ;   sheet requesting input user parented parent component message type message type", "metadata": [], "label": "COHERENT"}
{"text": "save sheet file chooser chooser component parent sheet listener listener { chooser set dialog type file chooser save dialog ; sheet chooser parent null listener ;   display save file file chooser sheet", "metadata": [], "label": "NOT_COHERENT"}
{"text": "sheet file chooser chooser component parent sheet listener listener { chooser set dialog type file chooser dialog ; sheet chooser parent null listener ;   display file file chooser sheet", "metadata": [], "label": "NOT_COHERENT"}
{"text": "confirm sheet component parent component object message option type message type icon icon sheet listener listener { option sheet parent component message option type message type icon null null listener ;   brings sheet icon choice determined option type parameter", "metadata": [], "label": "COHERENT"}
{"text": "confirm sheet component parent component object message option type message type sheet listener listener { confirm sheet parent component message option type message type null listener ;   brings sheet choice determined option type parameter message type parameter determines icon display", "metadata": [], "label": "COHERENT"}
{"text": "message sheet component parent component object message message type icon icon sheet listener listener { option sheet parent component message option pane option message type icon null null listener ;   brings sheet displaying message parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "window window component component parent component { parent component null { option pane root frame ; } parent component frame parent component dialog { window parent component ; } window component parent component parent ;   component toplevel frame dialog", "metadata": [], "label": "NOT_COHERENT"}
{"text": "message sheet component parent component object message { message sheet parent component message option pane message ;   brings message sheet", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input sheet component parent component object message object initial selection sheet listener listener { input sheet parent component message option pane question message null null initial selection listener ;   question message sheet requesting input user parented parent component", "metadata": [], "label": "COHERENT"}
{"text": "update text { updating depth { formatter null { { string text formatter string ; set text text ; focus owner { select set cursor start field start field field content set caret position document length ; move caret position ; } } parse exception { print stack trace ; } } } updating depth ;   update text field", "metadata": [], "label": "COHERENT"}
{"text": "update { updating depth { formatter null { { object formatter string text ; set ; } parse exception { print stack trace ; } } } updating depth ;   update text field", "metadata": [], "label": "COHERENT"}
{"text": "set size dimension { set minimum size ; set maximum size ; set preferred size ; set bound width height ;   set component size property dimension", "metadata": [], "label": "COHERENT"}
{"text": "set popup anchor { popup anchor ;   set popup anchor", "metadata": [], "label": "COHERENT"}
{"text": "popup anchor { popup anchor ;   popup anchor", "metadata": [], "label": "COHERENT"}
{"text": "set selected font font { font selected font ; selected font ; fire property change selected font property ; update selection path ;   set selected font", "metadata": [], "label": "COHERENT"}
{"text": "set selection path tree path { tree path selection path ; selection path ; fire property change selection path property ; selection path null selection path path count { set selected font font node selection path path component font ;   set selected font", "metadata": [], "label": "NOT_COHERENT"}
{"text": "label figure { label ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "cancel selection { cancel option ; dialog null { dialog set visible false ; } fire action performed cancel selection ;   called ui user chooses cancel button", "metadata": [], "label": "COHERENT"}
{"text": "string ui { ui ;   string specifies render component", "metadata": [], "label": "COHERENT"}
{"text": "synchronized font font { load font ; { future clone ; } interrupted exception { font ; } execution exception { font ;   font graphic environment", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set ui font chooser ui ui { set ui ui ;   set feel object render component", "metadata": [], "label": "COHERENT"}
{"text": "approve selection { approve option ; dialog null { dialog set visible false ; } fire action performed approve selection ;   called ui user hit approve button", "metadata": [], "label": "COHERENT"}
{"text": "font chooser model model { model ;   selected font", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set image data image data { change ; image data image data ; buffered image null ; changed ;   set image data", "metadata": [], "label": "COHERENT"}
{"text": "buffered image buffered image { buffered image null image data null { { buffered image image io read array input stream image data ; } io exception { print stack trace ; create buffered image image data image data drop image data image data null ; } } buffered image ;   buffered image", "metadata": [], "label": "COHERENT"}
{"text": "image figure { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "transform affine transform tx { anchor start ; lead ; set bound tx transform anchor anchor tx transform lead lead ;   transforms figure", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "zoom action drawing editor editor scale factor button button { drawing view null scale factor button ; set editor editor ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "graphical composite figure { null ;   constructor presentation figure", "metadata": [], "label": "COHERENT"}
{"text": "rectangle drawing { rectangle drawing ; presentation figure null { add presentation figure drawing ; } ;   draw", "metadata": [], "label": "COHERENT"}
{"text": "graphical composite figure figure presentation figure { ; set presentation figure presentation figure ;   constructor creates graphical composite figure graphical figure", "metadata": [], "label": "COHERENT"}
{"text": "selection color chooser action drawing editor editor attribute key color key icon icon { editor key null icon ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "selection color chooser action drawing editor editor attribute key color key { editor key null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set bound anchor lead { layouter null { set bound anchor lead ; basic set presentation figure bound anchor lead ; } { rectangle layouter layout anchor lead ; basic set presentation figure bound math max lead max math max lead max ; invalidate ;   move figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute key key { presentation figure null { presentation figure key ; } { attribute key key key key attribute ;   attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "rectangle bound { presentation figure null bound ; presentation figure bound ;   logcal display", "metadata": [], "label": "COHERENT"}
{"text": "collection handle create handle detail level { linked list handle handle linked list handle ; detail level { move handle add move handle handle ; } handle ;   handle presentation figure", "metadata": [], "label": "COHERENT"}
{"text": "figure presentation figure { presentation figure ;   figure render basic composite figure", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic { draw presentation figure ; draw ;   draw figure", "metadata": [], "label": "COHERENT"}
{"text": "set attribute key key { forbidden attribute null forbidden attribute key { presentation figure null { presentation figure set key ; } set key ; object attribute key ;   set attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "grid constrainer width height { width height math pi true ;   creates instance grid size", "metadata": [], "label": "NOT_COHERENT"}
{"text": "grid constrainer width height theta visible { width height { illegal argument exception width height ; } width width ; height height ; theta theta ; visible visible ;   creates instance grid size", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rectangle constrain rectangle rectangle translation direction dir { ; dir { north north west west constrain dir ; ; east north east width ; constrain dir ; width ; ; south south west height ; constrain dir ; height ; ; south east height ; width ; constrain dir ; height ; width ; ; } ; ; ;   constrains placement rectangle direction", "metadata": [], "label": "COHERENT"}
{"text": "grid constrainer width height visible { width height math pi visible ;   creates instance grid size", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set major grid spacing { major grid spacing ; major grid spacing ; fire property change major grid spacing ; fire changed ;   spacing major grid", "metadata": [], "label": "NOT_COHERENT"}
{"text": "constrain { math round width width ; math round height height ; ;   constrains closest grid direction", "metadata": [], "label": "COHERENT"}
{"text": "java util list figure child front { child null linked list figure reversed list figure child ;   iterator iterate front child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "transform affine transform tx { transform tx ; figure child { transform tx ; } invalidate ;   transforms figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set attribute key key { set key ; attribute enabled key { child null { figure child child { child set key ;   set attribute figure", "metadata": [], "label": "COHERENT"}
{"text": "layouter layouter { layouter ;   layouter object encapsulated layout algorithm figure", "metadata": [], "label": "COHERENT"}
{"text": "layout { layouter null { rectangle bound bound ; bound bound ; rectangle layouter layout ; invalidate ;   layout algorithm define child component laid relation", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic { draw ; figure child child { child visible { child draw ;   draw figure", "metadata": [], "label": "COHERENT"}
{"text": "{ ellipse ellipse ellipse clone ; grow attribute key perpendicular hit growth ; grow ; grow ; width grow ; height grow ; ;   check inside figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ellipse figure { ;   construct ellipse figure initialized location size", "metadata": [], "label": "COHERENT"}
{"text": "ellipse figure width height { ellipse ellipse width height ;   construct initializes ellipse figure coordinate", "metadata": [], "label": "COHERENT"}
{"text": "mouse released mouse event evt { popup timer null { popup timer ; popup timer null ; } mouse pressed popup trigger { mouse pressed popup trigger false ; } { evt popup trigger { handle popup menu evt ; } { mouse released evt ;   mouse listener method mouse released event", "metadata": [], "label": "NOT_COHERENT"}
{"text": "delegation selection tool collection action drawing action collection action selection action { drawing action drawing action ; selection action selection action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle tracker handle handle { master handle handle ; multicaster handle multicaster handle ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "image tool image holder figure prototype { prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "image tool image holder figure prototype map attribute key object attribute { prototype attribute ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "creation tool figure prototype map attribute key object attribute { prototype attribute null ;   creates instance prototype attribute set", "metadata": [], "label": "NOT_COHERENT"}
{"text": "creation tool figure prototype map attribute key object attribute string { prototype prototype ; prototype attribute attribute ; null { resource bundle util label resource bundle util bundle org jhotdraw draw label ; label string edit create figure text ; } presentation ;   creates instance prototype attribute set", "metadata": [], "label": "NOT_COHERENT"}
{"text": "creation tool figure prototype { prototype null null ;   creates instance prototype attribute set", "metadata": [], "label": "NOT_COHERENT"}
{"text": "creation tool string prototype { prototype null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set tool creation { tool creation ; tool creation ;   set false creation tool doe fire tool figure ha created", "metadata": [], "label": "COHERENT"}
{"text": "creation finished figure created figure { created figure selectable { view add selection created figure ; } tool creation { fire tool ;   method subclass perform additonal user interaction figure ha created", "metadata": [], "label": "COHERENT"}
{"text": "image transferable image image { image image ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set update drawing editor { update drawing editor ;   set true attribute editor update drawing editor", "metadata": [], "label": "COHERENT"}
{"text": "set view drawing view { view ; update active view ;   attache figure attribute editor handler drawing view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set attribute editor attribute editor { attribute editor null { attribute editor remove property change listener event handler ; } attribute editor ; attribute editor null { attribute editor add property change listener event handler ;   attache figure attribute editor handler attribute editor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute editor attribute editor { attribute editor ;   attribute editor figure attribute editor handler attached", "metadata": [], "label": "COHERENT"}
{"text": "drawing editor drawing editor { drawing editor ;   drawing editor figure attribute editor handler attached", "metadata": [], "label": "COHERENT"}
{"text": "jnlp clipboard object target { target target ;   creates proxy target object", "metadata": [], "label": "COHERENT"}
{"text": "init component { tool button javax swing button ;   method called init method initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "uri chooser chooser { uri chooser pane ;   uri chooser pane sheet", "metadata": [], "label": "COHERENT"}
{"text": "option { option ;   option file chooser option pane returned", "metadata": [], "label": "NOT_COHERENT"}
{"text": "sheet event sheet source uri chooser chooser option object { source ; pane chooser ; option option ; ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object pane { pane ;   pane sheet", "metadata": [], "label": "COHERENT"}
{"text": "sheet event sheet source { source ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "sheet event sheet source file chooser file chooser option object { source ; pane file chooser ; option option ; ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object { ;   file chooser option pane returned", "metadata": [], "label": "NOT_COHERENT"}
{"text": "option pane option pane { option pane pane ;   option pane pane sheet", "metadata": [], "label": "COHERENT"}
{"text": "path tool svg path figure path prototype svg bezier figure bezier prototype { path prototype bezier prototype null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "toggle property panel action application app view view { app view ; set property property panel visible ; resource bundle util label resource bundle util bundle org jhotdraw sample odg label ; action label string property panel ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "write uri uri chooser fc io exception { svg output format write file view drawing ;   writes view uri", "metadata": [], "label": "COHERENT"}
{"text": "pageable create pageable { drawing pageable view drawing ;   creates pageable object printing view", "metadata": [], "label": "COHERENT"}
{"text": "init action { action map undo action undo undo action ; action map redo action undo redo action ;   initializes view specific action", "metadata": [], "label": "COHERENT"}
{"text": "{ xxx doe stroke width account transformed shape ;   check inside figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "component ui create ui component { palette formatted text field ui ;   creates ui text field", "metadata": [], "label": "NOT_COHERENT"}
{"text": "install ui component { install component font chooser ; install listener font chooser ;   configures component feel", "metadata": [], "label": "NOT_COHERENT"}
{"text": "component ui create ui component { palette font chooser ui ui palette font chooser ui font chooser ; ui ;   instance ui delegate component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "uninstall ui component { uninstall listener font chooser ; uninstall component font chooser ;   revers configuration wa component install ui", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text creation tool text holder figure prototype map attribute key object attribute { prototype attribute ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text creation tool text holder figure prototype { prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set rubberband color color { rubberband color ;   set rubberband color tool", "metadata": [], "label": "COHERENT"}
{"text": "text creation tool text holder figure prototype { prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "component ui create ui component { label ui ;   preferred spacing label component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "paint disabled text label graphic string text text { color ui manager color label disabled foreground ; set color null foreground ; acc ; displayed mnemonic ; palette utility draw string acc text text ;   paint label disabled text color", "metadata": [], "label": "NOT_COHERENT"}
{"text": "polygon array { size ; size ; ; { ; } ;   creates polygon array bezier path", "metadata": [], "label": "COHERENT"}
{"text": "coord { node ; coord coord ;   convenience method single coordinate control", "metadata": [], "label": "NOT_COHERENT"}
{"text": "length path flatness { len ; path iterator path path iterator affine transform flatness ; coords ; type current segment coords ; prev coords ; prev coords ; ; ; ; { current segment coords ; len geom length prev prev coords coords ; prev coords ; prev coords ; } len ;   length path", "metadata": [], "label": "NOT_COHERENT"}
{"text": "transform affine transform tx { ; node cp { ; ; { cp ; cp ; tx transform ; cp ; cp ; } } invalidate path ;   transforms bezier path", "metadata": [], "label": "COHERENT"}
{"text": "set coord { node ; coord ; coord ;   convenience method changing single coordinate control", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add mask { add node mask ;   convenience method adding control coordinate mask", "metadata": [], "label": "NOT_COHERENT"}
{"text": "chop { validate path ; geom chop path ;   edge bezier path cross center bezier path", "metadata": [], "label": "COHERENT"}
{"text": "validate path { path null { path path ;   recomputes bezier path invalid", "metadata": [], "label": "COHERENT"}
{"text": "join segment join tolerance { ; size ; { node ; geom length join join tolerance { remove ; ; } } ;   join segment hit node bezier path", "metadata": [], "label": "COHERENT"}
{"text": "center { sx ; sy ; node { sx ; sy ; } size ; sx sy ;   center bezier path", "metadata": [], "label": "COHERENT"}
{"text": "add collection { { add node ;   convenience method adding multiple control single coordinate", "metadata": [], "label": "NOT_COHERENT"}
{"text": "invalidate path { path null ; bound null ; outer ;   called bezier path ha changed", "metadata": [], "label": "NOT_COHERENT"}
{"text": "mouse pressed mouse event { typing target null { edit typing target ; update cursor view ;   creates figure mouse location", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text editing tool text holder figure typing target { typing target typing target ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "mouse pressed mouse event { typing target null { edit typing target ; update cursor view ;   pressed figure text holder figure edited", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text editing tool text holder figure typing target { typing target typing target ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "reparameterize array list bez curve { pt ; ; prime ; parameter prime pt ; ; ; { prime newton raphson root bez curve ; } prime ;   set parameterization parameterization", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier path fit bezier path digitized error { fit bezier path array list digitized error ;   fit bezier path list digitized", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bezier path fit bezier path bezier path digitized error { array list array list digitized size ; bezier path node digitized { add ; } fit bezier path error ;   fit bezier path list digitized", "metadata": [], "label": "NOT_COHERENT"}
{"text": "length { math sqrt squared length ;   length input vector", "metadata": [], "label": "NOT_COHERENT"}
{"text": "chord length parameterize array list { ; ; parameterization ; ; ; ; { distance ; } ; ; { ; } ;   assign parameter digitized relative distance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ii { ; ; ; ;   subtract vector vector", "metadata": [], "label": "COHERENT"}
{"text": "normalize { len length ; len { len ; len ; } ;   normalizes input vector", "metadata": [], "label": "COHERENT"}
{"text": "bezier ii degree { ; ; curve parameter temp ; local copy control copy array temp degree ; ; degree ; { temp clone ; } triangle computation ; degree ; { ; degree ; { temp temp temp ; temp temp temp ; } } temp ; ;   evaluate bezier curve parameter", "metadata": [], "label": "COHERENT"}
{"text": "scale newlen { len length ; len { newlen len ; newlen len ; } ;   scale input vector length", "metadata": [], "label": "COHERENT"}
{"text": "squared distance { dx ; dy ; dx dx dy dy ;   distance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "compute left tangent array list { hat ; hat ii ; hat normalize hat ; hat ;   approximate unit tangent left endpoint digitized curve", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add ii { ; ; ; ;   vector sum", "metadata": [], "label": "NOT_COHERENT"}
{"text": "generate bezier array list prime hat hat { bez curve ; bez curve ; ; bez curve length ; { bez curve ; } wu barsky heuristic dist distance ; bez curve ; bez curve ; add bez curve scale hat dist bez curve ; add bez curve scale hat dist bez curve ; bez curve ;   square method bezier control region", "metadata": [], "label": "NOT_COHERENT"}
{"text": "array list remove coincident java util list digitized { java util array list cleaned array list ; digitized size { prev digitized ; cleaned add prev ; digitized { prev equal { cleaned add ; prev ; } } } cleaned ;   remove sequence coincident", "metadata": [], "label": "COHERENT"}
{"text": "scale iii { result ; result ; result ; result ;   scale input vector factor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "compute max error array list bez curve split { ; max dist ; maximum error dist ; current error ; curve ; vector curve split ; max dist ; ; ; { bezier ii bez curve ; ii ; dist squared length ; dist max dist { max dist dist ; split ; } } max dist ;   maximum squared distance digitized fitted curve", "metadata": [], "label": "COHERENT"}
{"text": "newton raphson root { numerator denominator ; ; ; evaluated prime ; improved ; compute bezier ii ; generate control vertex ; ; { ; } generate control vertex ; ; { ; } compute bezier ii ; bezier ii ; compute numerator ; denominator ; prime numerator denominator ; prime ;   newton raphson iteration root", "metadata": [], "label": "COHERENT"}
{"text": "{ path size path closed ;   test read", "metadata": [], "label": "COHERENT"}
{"text": "winding rule { path winding rule ;   winding rule determining interior path", "metadata": [], "label": "COHERENT"}
{"text": "bezier path iterator bezier path path affine transform { path path ; affine ;   construct iterator bezier path optional affine transform", "metadata": [], "label": "COHERENT"}
{"text": "bezier path iterator bezier path path { path null ;   construct iterator bezier path", "metadata": [], "label": "COHERENT"}
{"text": "polygon convex hull polygon list { polygon convex hull polygon ; convex hull array size { convex hull add ; } convex hull ;   computes convex hull set", "metadata": [], "label": "COHERENT"}
{"text": "list convex hull list { array list convex hull array size ;   computes convex hull set", "metadata": [], "label": "COHERENT"}
{"text": "list convex hull list { array list convex hull array size ;   computes convex hull set", "metadata": [], "label": "COHERENT"}
{"text": "{ equal equal { location false ; } val ; val ;   true", "metadata": [], "label": "COHERENT"}
{"text": "set drag tracker drag tracker { drag tracker ;   method set drag tracker", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set handle tracker handle tracker { handle tracker ;   method set handle tracker", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set select tracker select tracker { select tracker ;   method set select tracker", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set select enabled { select enabled ; select enabled ; fire property change select enabled property ;   set select enabled property", "metadata": [], "label": "COHERENT"}
{"text": "handle tracker handle tracker handle handle { handle tracker null { handle tracker handle tracker ; } handle tracker set handle handle view compatible handle handle ; handle tracker ;   method handle tracker handle user interaction handle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "selection tool { tracker select tracker ; tracker handler tracker handler ; tracker add tool listener tracker handler ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "select enabled { select enabled ;   select enabled property", "metadata": [], "label": "COHERENT"}
{"text": "select tracker select tracker { select tracker null { select tracker select tracker ; } select tracker ;   method select tracker handle user interaction selecting drawing", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing create drawing { create drawing input output format basic clipboard support drawing drawing drawing ; drawing add input format serialization input output format ; drawing add output format serialization input output format ; drawing ;   creates drawing input output format drawing figure copied pasted drawing view", "metadata": [], "label": "COHERENT"}
{"text": "drawing create drawing { create drawing input output format basic clipboard support drawing drawing drawing ; drawing add input format serialization input output format ; drawing add output format serialization input output format ; drawing add output format image output format ; drawing ;   creates drawing input output format drawing figure copied pasted drawing view", "metadata": [], "label": "COHERENT"}
{"text": "drawing editor editor { editor ;   drawing editor view", "metadata": [], "label": "COHERENT"}
{"text": "set editor drawing editor { editor null { editor remove view ; } editor ; editor null { editor add view ;   set drawing editor view", "metadata": [], "label": "COHERENT"}
{"text": "init action { action map undo action undo undo action ; action map redo action undo redo action ;   initializes view specific action", "metadata": [], "label": "NOT_COHERENT"}
{"text": "suppress warning unchecked editor fold defaultstate collapsed desc generated code gen init component init component { set close operation javax swing window constant exit close ; pack ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "suppress warning unchecked editor fold defaultstate collapsed desc generated code gen init component init component { set layout java awt border layout ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "message panel { null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "progress indicator { null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "minimum { progress model minimum ;   minimum lower progress", "metadata": [], "label": "COHERENT"}
{"text": "set maximum { progress model set maximum ;   specifies maximum", "metadata": [], "label": "COHERENT"}
{"text": "maximum { progress model maximum ;   maximum progress", "metadata": [], "label": "COHERENT"}
{"text": "set minimum { progress model set minimum ;   specifies minimum", "metadata": [], "label": "COHERENT"}
{"text": "set progress nv { progress model set nv ;   progress operation monitored", "metadata": [], "label": "NOT_COHERENT"}
{"text": "progress indicator string message string note { message note true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "odg rect radius handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "stroke tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string stroke toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "inset inset { sw math ceil stroke width ; inset inset inset ; inset inset top sw inset left sw inset bottom sw inset sw ;   inset draw text", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text figure { resource bundle util bundle org jhotdraw draw label string text figure text ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string text { string text ;   text text figure", "metadata": [], "label": "COHERENT"}
{"text": "tool tool { editable { text editing tool tool text editing tool ; tool ; } null ;   specialized tool coordinate", "metadata": [], "label": "NOT_COHERENT"}
{"text": "odg figure create polyline figure map attribute key object io exception { odg path figure figure odg path figure ; odg bezier figure bezier odg bezier figure ; { bezier add node bezier path node ; } figure remove child ; figure add bezier ; figure set attribute ; figure ;   creates polyline figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read input stream io exception { array output stream tmp array output stream ; buf ; len ; len read buf ; { tmp write buf len ; } tmp close ; tmp array ;   read input stream eof reached", "metadata": [], "label": "NOT_COHERENT"}
{"text": "odg figure create polygon figure map attribute key object io exception { odg path figure figure odg path figure ; odg bezier figure bezier odg bezier figure ; { bezier add node bezier path node ; } bezier set closed true ; figure remove child ; figure add bezier ; figure set attribute ; figure ;   creates polygon figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "java util list figure sort collection figure { ensure sorted ; array list figure sorted array list figure size ; figure child { { sorted add ; } } sorted ;   implementation note sorting orphaned child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "java util list figure figure front { ensure sorted ; reversed list figure child ;   iterator iterate front child", "metadata": [], "label": "COHERENT"}
{"text": "odg figure create figure map attribute key object io exception { odg path figure figure odg path figure ; figure set bound ; figure set attribute ; figure ;   creates figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "odg figure create path figure bezier path path map attribute key object io exception { odg path figure figure odg path figure ; figure remove child ; bezier path path { odg bezier figure bezier odg bezier figure ; bezier set bezier path ; figure add bezier ; } figure set attribute ; figure ;   creates path figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "composite figure create figure io exception { odg figure figure odg figure ; figure ;   creates odg figure", "metadata": [], "label": "COHERENT"}
{"text": "set text string text { set text text ;   set text text figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text figure { resource bundle util bundle org jhotdraw draw label string text figure text ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string text { text ;   text text figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "{ rectangle rectangle rectangle clone ; grow attribute key perpendicular hit growth ; geom grow grow grow ; ;   check inside figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rectangle figure { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "figure { add node bezier path node ; add node bezier path node ; set connectable false ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set arc height { roundrect archeight ; roundrect archeight ; fire property change arc height property ;   set arc height", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set arc width { roundrect arcwidth ; roundrect arcwidth ; fire property change arc width property ;   set arc width", "metadata": [], "label": "NOT_COHERENT"}
{"text": "arc width { roundrect arcwidth ;   arc width", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string comma separated array string str io exception { string result str split ; result length result equal { string ; } { result ;   string array", "metadata": [], "label": "COHERENT"}
{"text": "add notify drawing drawing { add notify drawing ; start connector null connector null { handle connect start connector connector ; update connection ;   method invoked figure removed drawing", "metadata": [], "label": "COHERENT"}
{"text": "transform affine transform tx { transform tx ; update connection ; connected   ensures connection updated connection wa moved", "metadata": [], "label": "NOT_COHERENT"}
{"text": "remove notify drawing drawing { start connector null connector null { handle disconnect start connector connector ; } note set connector null drawing undo performed connection ha deleted set start connector null ; set connector null ; remove notify drawing ;   method invoked figure removed drawing", "metadata": [], "label": "COHERENT"}
{"text": "java util list figure sort collection extends figure { ensure sorted ; array list figure sorted array list figure size ; figure child { { sorted add ; } } sorted ;   implementation note sorting orphaned child", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ensure sorted { sorting { collection sort child figure layer comparator instance ; sorting false ;   ensures child sorted sequence", "metadata": [], "label": "COHERENT"}
{"text": "odg path figure { add odg bezier figure ; odg attribute key set ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "align action drawing editor editor { editor ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing view action drawing editor editor { set editor editor ;   creates view action current view editor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "dispose { set editor null ;   free resource held object garbage collected", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set update enabled { note event handler null yield true updating enabled event handler null { { event handler event handler ; register event handler ; } { unregister event handler ; event handler null ; } } { update enabled ;   enabled action updated reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "unregister event handler { editor null { editor remove property change listener event handler ; } active view null { active view remove property change listener event handler ; active view null ; } specific view null { specific view remove property change listener event handler ;   unregisters event handler drawing editor active drawing view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing view action drawing view view { specific view view ; register event handler ;   creates view action view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "updat enabled { event handler null ;   true action automatically update enabled reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "update enabled { view null { set enabled view enabled ; } { set enabled false ;   update enabled action reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "attribute toggler drawing editor editor attribute key key { editor key null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connector compatible connector connector start connector { chop triangle connector ;   compatible connector", "metadata": [], "label": "NOT_COHERENT"}
{"text": "connector connector connection figure prototype { chop triangle connector ;   figure connector location", "metadata": [], "label": "COHERENT"}
{"text": "attribute action drawing editor editor attribute key key object icon icon { editor key null icon ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute action drawing editor editor attribute key key object string { editor key null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "update enabled { view null { set enabled view enabled view selection count ; } { set enabled false ;   update enabled action reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "set update enabled { note event handler null yield true updating enabled event handler null { { event handler event handler ; register event handler ; } { unregister event handler ; event handler null ; } } { update enabled ;   enabled action updated reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "updat enabled { event handler null ;   true action automatically update enabled reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "selected action drawing editor editor { set editor editor ; update enabled ;   creates action selected figure current view editor", "metadata": [], "label": "COHERENT"}
{"text": "unregister event handler { editor null { editor remove property change listener event handler ;   unregisters event handler drawing editor active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "drawing editor action drawing editor editor { set editor editor ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "fire undoable edit happened undoable edit edit { drawing fire undoable edit happened edit ;   update enabled action reflect enabled active drawing view", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set update enabled { note event handler null yield true updating enabled event handler null { { event handler event handler ; register event handler ; } { unregister event handler ; event handler null ; } } { update enabled ;   enabled action updated reflect enabled active drawing view", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "tool bar { init component ; { prefs preference util user node ; } security exception {   creates form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg image figure { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "align tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "init component { set opaque false ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set image image data buffered image buffered image { change ; image data image data ; buffered image buffered image ; changed ;   set image", "metadata": [], "label": "COHERENT"}
{"text": "set image data image data { change ; image data image data ; buffered image null ; changed ;   set image data", "metadata": [], "label": "COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set buffered image buffered image image { change ; image data null ; buffered image image ; changed ;   set buffered image", "metadata": [], "label": "COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg ellipse figure { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "canvas tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "arc width { roundrect arcwidth ;   arc width", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set arc height { roundrect archeight ; roundrect archeight ; fire property change arc height property ;   set arc height", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg rect figure { ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "arc height { roundrect archeight ;   arc height", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set arc width height { set arc width width ; set arc height height ;   convenience method setting arc width arc height", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "arrange tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "init component { set opaque false ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "action tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "{ transform null { { transform inverse transform ; } noninvertible transform exception { print stack trace ; } } rectangle text shape bound ; empty bound ;   check inside figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "inset inset { sw stroke color null math ceil stroke width ; inset inset inset ; inset inset top sw inset left sw inset bottom sw inset sw ;   inset draw text", "metadata": [], "label": "COHERENT"}
{"text": "empty { text null text length ;   text text figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg path outline handle svg path figure owner { owner false ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "handle mouse click mouse event evt drawing view view { evt click count view handle detail level { figure child child { svg bezier figure bf svg bezier figure child ; bf segment view scale factor ; { bf handle mouse click evt view ; evt consume ; true ; } } } false ;   handle mouse click", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg rect radius handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg text figure { text ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set text string text { set text text ;   set text text figure", "metadata": [], "label": "COHERENT"}
{"text": "svg figure { svg attribute key set ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "grid constrainer constrainer { constrainer ;   grid constrainer edited panel", "metadata": [], "label": "COHERENT"}
{"text": "editor color chooser action drawing editor editor attribute key color key icon icon { editor key null icon ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "editor color chooser action drawing editor editor attribute key color key { editor key null null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "editor color chooser action drawing editor editor attribute key color key string { editor key null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "action drawing editor editor { editor figure true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "inset border inset component { inset border inset clone ;   inset border", "metadata": [], "label": "COHERENT"}
{"text": "image bevel border image img inset border inset { img border inset border inset true ;   creates instance image inset", "metadata": [], "label": "NOT_COHERENT"}
{"text": "action redo action { redo action ;   redo action redo menu item", "metadata": [], "label": "COHERENT"}
{"text": "discard edits { discard edits ; update action ; set ha edits false ;   discard edits", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add edit undoable edit edit { debug system println undo redo manager hash code add edit ; undo redo progress { edit die ; true ; } success add edit edit ; update action ; success edit edit undone edit { set ha edits true ; } success ;   progress insert edit add remove edits add", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ha edits { ha edits ;   true undoable edit ha call discard edits", "metadata": [], "label": "NOT_COHERENT"}
{"text": "action undo action { undo action ;   undo action undo menu item", "metadata": [], "label": "COHERENT"}
{"text": "redo undo exception { undo redo progress true ; { redo ; } { undo redo progress false ; update action ;   redoes undone edit event", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add edit undoable edit edit { edit { ; true ; } progress edit composite edit { true ; } { add edit edit ;   edit progress accepts edit true", "metadata": [], "label": "COHERENT"}
{"text": "composite edit string presentation { presentation presentation ; ;   creates composite edit presentation significance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string redo presentation { presentation null undo redo manager label string edit redo text presentation redo presentation ;   redo presentation", "metadata": [], "label": "COHERENT"}
{"text": "string presentation { presentation null presentation presentation ;   presentation", "metadata": [], "label": "COHERENT"}
{"text": "string undo presentation { presentation null undo redo manager label string edit undo text presentation undo presentation ;   undo presentation", "metadata": [], "label": "COHERENT"}
{"text": "composite edit { true ;   creates composite edit compound edit presentation", "metadata": [], "label": "NOT_COHERENT"}
{"text": "{ false ;   false edit insignificant maintains user selection doe change model", "metadata": [], "label": "COHERENT"}
{"text": "invoke getter object obj string method { { method method obj method method ; object result method invoke obj object ; integer result ; } method exception { ; } illegal access exception { ; } invocation target exception { ;   invokes getter method exists", "metadata": [], "label": "COHERENT"}
{"text": "object invoke object obj string method method exception { { method method obj method method { type } ; method invoke obj object { } ; } illegal access exception { method exception method accessible ; } invocation target exception { method supposed exception internal error message ;   invokes setter method exists", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object invoke object obj string method method exception { { method method obj method method { integer type } ; method invoke obj object { integer } ; } illegal access exception { method exception method accessible ; } invocation target exception { method supposed exception internal error message ;   invokes method exists", "metadata": [], "label": "COHERENT"}
{"text": "invoke exists object obj string method { { invoke obj method ; } method exception {   invokes method exists", "metadata": [], "label": "COHERENT"}
{"text": "invoke exists object obj string method { { invoke obj method ; } method exception {   invokes setter method exists", "metadata": [], "label": "COHERENT"}
{"text": "object invoke getter object obj string method object { { method method obj method method ; object result method invoke obj object ; result ; } method exception { ; } illegal access exception { ; } invocation target exception { ;   invokes getter method exists", "metadata": [], "label": "COHERENT"}
{"text": "object invoke object obj string method method exception { { method method obj method method ; object result method invoke obj object ; result ; } illegal access exception { method exception method accessible ; } invocation target exception { method supposed exception internal error message ;   invokes accessible parameterless method exists", "metadata": [], "label": "COHERENT"}
{"text": "invoke getter object obj string method { { method method obj method method ; object result method invoke obj object ; result ; } method exception { ; } illegal access exception { ; } invocation target exception { ;   invokes getter method exists", "metadata": [], "label": "COHERENT"}
{"text": "object invoke object obj string method clazz object method exception { { method method obj method method { clazz } ; method invoke obj object { } ; } illegal access exception { method exception method accessible ; } invocation target exception { method supposed exception internal error message ;   invokes setter method exists", "metadata": [], "label": "COHERENT"}
{"text": "invoke getter object obj string method { { method method obj method method ; object result method invoke obj object ; result ; } method exception { ; } illegal access exception { ; } invocation target exception { ;   invokes getter method exists", "metadata": [], "label": "COHERENT"}
{"text": "resource bundle util string base locale locale { locale locale ; base base ; resource resource bundle bundle base locale ;   creates resouce bundle util wrap provided resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "mnemonic string key { string string recursive key ; null length ;   mnemonic resource bundle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string string string key { { string string recursive key ; system println resource bundle util base key ; ; } missing resource exception { system println resource bundle util base key missing ; verbose { system err println warning resource bundle util base key ; print stack trace ; } key ;   string resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "remove property modifier string { property modifier remove ;   remove property modifier", "metadata": [], "label": "COHERENT"}
{"text": "mnemonic property string key { string ; { string recursive key mnemonic ; } missing resource exception { verbose { system err println warning resource bundle util base key mnemonic ; print stack trace ; } null ; } null length ;   java bean mnemonic property resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "property modifier string string fallback chain { property modifier fallback chain ;   property modifier fallback chain", "metadata": [], "label": "COHERENT"}
{"text": "string format string key object argument { string format resource locale string key argument ; formatter resource locale format string key argument string ;   formatted string java util formatter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "resource bundle util bundle string base missing resource exception { bundle base locale util ;   resource bundle subclass", "metadata": [], "label": "NOT_COHERENT"}
{"text": "resource bundle util bundle string base locale locale missing resource exception { resource bundle util ; resource bundle util base locale ; ;   resource bundle subclass", "metadata": [], "label": "NOT_COHERENT"}
{"text": "resource bundle wrapped bundle { resource ;   wrapped resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "string tool text property string key { { string string recursive key tool text ; ; } missing resource exception { verbose { system err println warning resource bundle util base key tool text ; print stack trace ; } null ;   string java bean tool text property resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "string text property string key { { string string recursive key text ; ; } missing resource exception { verbose { system err println warning resource bundle util base key text ; print stack trace ; } null ;   string java bean text property resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "key stroke key stroke string key { key stroke null ; { string string recursive key ; null key stroke null key stroke key stroke ; } element exception { } ;   key stroke resource bundle", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read object object input stream io exception exception { pseudo constructor read object ; establish resource variable resource resource bundle bundle base locale ;   read object object input stream establish resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "integer integer string key { { integer string recursive key ; } missing resource exception { verbose { system err println warning resource bundle util base key ; print stack trace ; } integer ;   integer resource bundle", "metadata": [], "label": "COHERENT"}
{"text": "preference user node { user node null { user node key { user node preference util false ; } user node ; } { preference user node ; } throwable { user node null { user node hash map preference ; } user node ;   user node permitted proxy", "metadata": [], "label": "NOT_COHERENT"}
{"text": "preference system node { system node null { system node key { system node preference util false ; } system node ; } { preference system node ; } throwable { system node null { system node hash map preference ; } system node ;   system node permitted proxy", "metadata": [], "label": "NOT_COHERENT"}
{"text": "install frame prefs handler preference prefs string window window { install frame prefs handler prefs window dimension ;   installs frame preference handler", "metadata": [], "label": "NOT_COHERENT"}
{"text": "init action { action map undo action undo undo action ; action map redo action undo redo action ;   initializes view specific action", "metadata": [], "label": "COHERENT"}
{"text": "pageable create pageable { drawing pageable view drawing ;   creates pageable object printing view", "metadata": [], "label": "COHERENT"}
{"text": "set drawing editor drawing editor { editor null { editor remove view ; } editor ; editor null { editor add view ;   set drawing editor view", "metadata": [], "label": "COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "paint stroke paint figure { opacity stroke opacity ; stroke gradient null { stroke gradient paint opacity ; } color color stroke color ; color null { opacity { color color color rgb xffffff opacity true ; } } color ;   stroke paint figure based attribute stroke gradient stroke opacity stroke paint bound figure", "metadata": [], "label": "COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "link tool bar { label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "property descriptor property descriptor { pdescriptor ;   bean property descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "fill tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "figure tool bar { label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "save output stream io exception { writer output stream writer utf ; save ; flush ;   writes content dom output output stream", "metadata": [], "label": "COHERENT"}
{"text": "add attribute string string { null { current set attribute ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "close element { current xml element stack pop ;   close current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "add text string text { string current content ; null { current set content text ; } { current set content text ;   add text current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "element string tag { xml element element xml element ; hash map false false ; element set tag ; current add child element ; stack push current ; current element ;   element dom document", "metadata": [], "label": "COHERENT"}
{"text": "add attribute string { current set attribute integer string ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "print print writer { xml writer writer xml writer ; { writer write document ; writer write xml element document child true ; } io exception { internal error error internal error ; error init ; error ;   print content dom output print writer", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add attribute string { remove awkard string str string ; str str str substring str length ; current set attribute str ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element count string tag { count ; node list list current child node ; ; list length ; { node node list item ; node element element node tag equal tag { count ; } } count ;   child element tag current element", "metadata": [], "label": "COHERENT"}
{"text": "object read object io exception { read object ;   read object current element", "metadata": [], "label": "COHERENT"}
{"text": "element string tag { count ; node list list current child node ; len list length ; ; len ; { node node list item ; node element element node tag equal tag { current node ; ; } } illegal argument exception element tag ;   element current node", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element { count ; node list list current child node ; len list length ; ; len ; { node node list item ; node element { count { current node ; ;   element current node", "metadata": [], "label": "COHERENT"}
{"text": "string text string { current child node length ; string builder buf string builder ; text current buf ; buf string ;   text current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string tag { element current tag ;   tag current element", "metadata": [], "label": "COHERENT"}
{"text": "close element { element current tag equal tag { illegal argument exception attempt close wrong element tag element current tag ; } current current parent node ;   close current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "element string tag { count ; node list list current child node ; len list length ; ; len ; { node node list item ; node element element node tag equal tag { count { current node ; ; } } } illegal argument exception child tag ;   element current node", "metadata": [], "label": "NOT_COHERENT"}
{"text": "attribute string { string element current attribute ; length decode ;   attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string attribute string string { string element current attribute ; length ;   attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "javax dom output dom factory factory io exception { factory factory ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add comment string comment { current append child document create comment comment ;   add comment current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "save writer io exception { reset ; { doctype null { write doctype ; write doctype ; write ; } transformer transformer factory instance transformer ; transform dom source document stream result ; } transformer exception { io exception error io exception message ; error init ; error ;   writes content dom output output stream", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add attribute string { remove awkard string str string ; str str str substring str length ; element current set attribute str ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "close element { element current equal tag { illegal argument exception attempt close wrong element tag element current ; } current current parent node ;   close current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "add attribute string string { null { element current set attribute ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element string tag { element element document create element tag ; current append child element ; current element ;   element dom document", "metadata": [], "label": "COHERENT"}
{"text": "add attribute string { element current set attribute integer string ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add attribute string { remove awkard string str string ; str str str substring str length ; element current set attribute str ;   add attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "java util list string inherited attribute string { linked list string linked list string ; xml element node stack { string string node attribute ; add ; } string string current attribute ; add ; ;   attribute current element dom document parent dom element", "metadata": [], "label": "COHERENT"}
{"text": "attribute string { string string current attribute ; null length ;   attribute current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "element string tag io exception { count ; array list list current child ; ; list size ; { xml element node xml element list ; node equal tag { count { stack push current ; current node ; ; } } } io exception element tag ;   element current node", "metadata": [], "label": "COHERENT"}
{"text": "attribute string { string string current attribute ; null length decode ;   attribute current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "element string tag io exception { array list list current child ; ; list size ; { xml element node xml element list ; node equal tag { stack push current ; current node ; ; } } io exception element tag ;   element current node", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string attribute string string { string string current attribute ; null length ;   attribute current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "string text string { string current content ; null ;   text current element dom document", "metadata": [], "label": "NOT_COHERENT"}
{"text": "close element { current xml element stack pop ;   close current element dom document", "metadata": [], "label": "COHERENT"}
{"text": "element count { current child count ;   child element current element", "metadata": [], "label": "COHERENT"}
{"text": "object read object io exception { read object ;   read object current element", "metadata": [], "label": "COHERENT"}
{"text": "set parameter string string filename input stream io exception { boundary ; write ; write ; filename ; write filename ; write ; newline ; write content type ; string type url connection guess content type filename ; type null type application octet stream ; writeln type ; newline ; pipe ; newline ;   add file parameter request file io exception", "metadata": [], "label": "COHERENT"}
{"text": "client http request url connection connection io exception { connection connection ; connection set output true ; connection set input true ; connection set request property content type multipart form data ; boundary boundary ;   creates multipart post http request freshly url connection connection io exception", "metadata": [], "label": "COHERENT"}
{"text": "set cooky map string string cooky io exception { cooky null ; cooky cooky ;   add cooky request map io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post string object io exception { post cooky ; set parameter ; post ;   post post request server parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "set parameter map parameter io exception { parameter null { iterator parameter entry set iterator ; ha ; { map entry entry map entry ; set parameter entry key string entry ;   add parameter request map parameter file file uploaded stringified request io exception", "metadata": [], "label": "COHERENT"}
{"text": "input stream post url url map parameter io exception { client http request url post parameter ;   post request url parameter passed argument parameter input stream server response io exception set parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "client http request string url string io exception { url url string ;   creates multipart post http request url string io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set cookie string string io exception { cooky ;   add cookie requst io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post string object string object io exception { post cooky ; set parameter ; set parameter ; post ;   post post request server parameter param parameter param parameter param parameter param parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "input stream post map parameter io exception { post cooky ; set parameter parameter ; post ;   post request server cooky parameter parameter passed argument parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "set parameter string object object io exception { object file { set parameter file object ; } { set parameter object string ;   add parameter request parameter file file uploaded string parameter passed request file stringified io exception", "metadata": [], "label": "COHERENT"}
{"text": "set cooky string raw cooky io exception { raw cooky raw cooky null raw cooky ; cooky ;   add cookie requst data", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set parameter string string io exception { null { invalid parameter exception set parameter null ; } null { invalid parameter exception set parameter null ; } boundary ; write ; newline ; newline ; writeln ;   add string parameter request io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post string cooky object parameter io exception { set cooky cooky ; post cooky ; set parameter parameter ; post ;   post request server cooky parameter cooky parameter passed argument cooky parameter input stream server response io exception set parameter set cooky", "metadata": [], "label": "COHERENT"}
{"text": "connect connector start connector { start owner task figure owner task figure { task figure sf task figure start owner ; task figure ef task figure owner ; disallow multiple connection dependent ef predecessor sf { false ; } disallow cyclic connection sf dependent ef ; } false ;   check figure connected", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post io exception { post cooky ; post ;   post request server cooky parameter input stream server response io exception", "metadata": [], "label": "COHERENT"}
{"text": "set cooky string cooky io exception { cooky null ; ; cooky length ; { set cookie cooky cooky ;   add cooky request io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post map string string cooky map parameter io exception { set cooky cooky ; post cooky ; set parameter parameter ; post ;   post request server cooky parameter cooky parameter passed argument cooky parameter input stream server response io exception set parameter set cooky", "metadata": [], "label": "COHERENT"}
{"text": "input stream post string object string object string object io exception { post cooky ; set parameter ; set parameter ; set parameter ; post ;   post post request server parameter param parameter param parameter param parameter param parameter param parameter param parameter input stream server response io exception set parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "client http request url url io exception { url connection ;   creates multipart post http request url io exception", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post url url string cooky object parameter io exception { client http request url post cooky parameter ;   post request url cooky parameter passed argument url cooky parameter input stream server response io exception set cooky set parameter", "metadata": [], "label": "COHERENT"}
{"text": "input stream post url url object parameter io exception { client http request url post parameter ;   post request url parameter passed argument parameter input stream server response io exception set parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post url url string object string object string object io exception { client http request url post ;   post post request url parameter param parameter param parameter param parameter param parameter param parameter param parameter input stream server response io exception set parameter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "input stream post object parameter io exception { post cooky ; set parameter parameter ; post ;   post request server cooky parameter parameter passed argument parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "input stream post url url string object io exception { client http request url post ;   post post request url parameter url param parameter param parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "input stream post url url string object string object io exception { client http request url post ;   post post request url parameter param parameter param parameter param parameter param parameter input stream server response io exception set parameter", "metadata": [], "label": "COHERENT"}
{"text": "string parameter string { { parameter ; } null pointer exception { null ;   parameter applet context", "metadata": [], "label": "NOT_COHERENT"}
{"text": "init component { tool button javax swing button ;   method called init method initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "list task figure successor { linked list task figure list linked list task figure ; dependency figure dependency { start figure { list add task figure figure ; } } list ;   dependent pert task directly connected pert dependency task figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "list task figure predecessor { linked list task figure list linked list task figure ; dependency figure dependency { figure { list add task figure start figure ; } } list ;   predecessor pert task directly connected pert dependency task figure", "metadata": [], "label": "NOT_COHERENT"}
{"text": "method descriptor method descriptor { mdescriptor ;   bean method descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bean descriptor bean descriptor { bdescriptor ;   bean bean descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event set descriptor event set descriptor { edescriptor ;   bean event set descriptor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read style element ixml element elem io exception { read style child elem common style ;   read lt style gt element xml element", "metadata": [], "label": "COHERENT"}
{"text": "read master style element ixml element elem io exception { read style child elem master style ;   read lt master style gt element xml element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read file file io exception { buffered input stream buffered input stream file input stream file ; { read ; } { close ;   read lt document style gt element xml file", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read layer set element ixml element elem hash map string style style io exception { debug { system println odg style reader unsupported elem element ;   read lt draw layer gt element xml element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "odg style reader { reset ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read automatic style element ixml element elem io exception { read style child elem automatic style ;   read lt automatic style gt element xml element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "matcher document document string string match match type match type { document document ; string string ; start ; convert efficiency match { match lower match upper string array ; } { match upper string upper array ; match lower string lower array ; } match type match type ;   creates instance matcher examined searched", "metadata": [], "label": "COHERENT"}
{"text": "start { start start ; ;   reset matcher attempt subsequence input sequence match pattern starting", "metadata": [], "label": "COHERENT"}
{"text": "pageable create pageable { drawing pageable view drawing ;   creates pageable object printing view", "metadata": [], "label": "COHERENT"}
{"text": "init action { action map undo action undo undo action ; action map redo action undo redo action ;   initializes view specific action", "metadata": [], "label": "COHERENT"}
{"text": "set start { start ;   set start previous method", "metadata": [], "label": "COHERENT"}
{"text": "left inset { left left inset ; view factory visible left width left ;   left inset", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set minimum comparable minimum { null minimum null { set minimum ; } min minimum ;   set minimum permissible", "metadata": [], "label": "COHERENT"}
{"text": "set maximum comparable max { null max null { set max ; } max max ;   set maximum permissible", "metadata": [], "label": "COHERENT"}
{"text": "suppress warning unchecked valid object cce { comparable min minimum ; { min null min compare { false ; } } cast exception cce { cce { cce ; } false ; } comparable max maximum ; { max null max compare { false ; } } cast exception cce { cce { cce ; } false ; } true ;   true min max", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set scale factor { scale factor ;   change scale factor formatter", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set null { null ;   disallows null", "metadata": [], "label": "COHERENT"}
{"text": "write io exception { { write separator ; skip lf true ; ; skip lf write separator ; skip lf false ; ; write ; skip lf false ; ;   write single character", "metadata": [], "label": "COHERENT"}
{"text": "write cbuf len io exception { len ; ; ; { cbuf { write cbuf ; ; write separator ; skip lf true ; ; write cbuf ; ; skip lf { skip lf false ; } { write separator ; } ; skip lf false ; ; } } write cbuf ;   write portion array character", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set separator string separator { separator separator ;   set separator println method", "metadata": [], "label": "COHERENT"}
{"text": "string separator { separator ;   separator println method", "metadata": [], "label": "COHERENT"}
{"text": "lf writer writer { ; separator string system property separator ;   create numbering writer", "metadata": [], "label": "COHERENT"}
{"text": "generic font family { generic font family null ;   generic font family map", "metadata": [], "label": "COHERENT"}
{"text": "null { null ;   true null allowed", "metadata": [], "label": "COHERENT"}
{"text": "generic font family string family font font { generic font family family lower font ;   add generic font family", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set null { null ;   set null allowed", "metadata": [], "label": "COHERENT"}
{"text": "set unknown font { unknown font ;   set unknown font allowed", "metadata": [], "label": "COHERENT"}
{"text": "ixml element elem string min max io exception { { ; math max math min max min ; } format exception { ;   read attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "width ixml element elem string str io exception { xxx compute percent factor viewport length elem str viewport stack peek width percent factor ;   width", "metadata": [], "label": "NOT_COHERENT"}
{"text": "read defs element ixml element elem io exception { ixml element node elem child { node ixml element { ixml element child ixml element node ; figure child figure read element child ;   read svg defs element", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml element elem string str io exception { string tokenizer tt string tokenizer str ; tt count token ; ; length ; { elem tt token elem tt token ; } ;   array", "metadata": [], "label": "NOT_COHERENT"}
{"text": "ixml element elem string str io exception { length elem str viewport stack peek factor ;   ", "metadata": [], "label": "NOT_COHERENT"}
{"text": "height ixml element elem string str io exception { xxx compute percent factor viewport length elem str viewport stack peek height percent factor ;   height", "metadata": [], "label": "NOT_COHERENT"}
{"text": "identify element ixml element elem { identified element elem attribute elem ; identified element elem attribute xml elem ; ixml element child elem child { identify element child ;   elments xml attribute hashtable identified element", "metadata": [], "label": "COHERENT"}
{"text": "string comma separated array string str io exception { string result str split ; result length result equal { string ; } { result ;   string array", "metadata": [], "label": "COHERENT"}
{"text": "ixml element elem string io exception { elem min max ;   read attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string { string str precision string string ; str { str str substring str length ; } str ;   array attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "write transform attribute ixml element elem map attribute key object io exception { affine transform transform ; null { write attribute elem transform transform ;   writes transform attribute http org tr svg mobile coords html transform attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string io exception { string builder buf string builder ; ; length ; { { buf append ; } buf append ; buf append ; buf append ; } buf string ;   array attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "view tool bar { resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; set label string toolbar ; set disclosure count ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "data flavor transfer data flavor { data flavor { flavor } ;   array data flavor object indicating flavor data provided", "metadata": [], "label": "NOT_COHERENT"}
{"text": "path tool svg path figure path prototype svg bezier figure bezier prototype { path prototype bezier prototype null ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string parameter string { { parameter ; } null pointer exception { null ;   applet parameter doesn null pointer exception applet context", "metadata": [], "label": "COHERENT"}
{"text": "string htmlencode string str { str null { ; } { string builder buf string builder ; ch str array { ch { buf append lt ; ; ; buf append gt ; ; ; buf append amp ; ; ; buf append ch ; ; } } buf string ;   escape character string", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string parameter string string { { string parameter ; null ; } null pointer exception { ;   applet parameter doesn null pointer exception applet context", "metadata": [], "label": "COHERENT"}
{"text": "string applet info { version version copyright original author hot draw contributor software licensed lgpl creative common ;   applet", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg drawing panel create drawing component { svg drawing panel svg drawing panel ; drawing editor editor drawing editor ; set editor drawing editor ; ;   creates drawing component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg create file tool image holder figure image prototype composite figure prototype map attribute key object attribute { image prototype attribute ; prototype prototype ; image prototype image prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg create file tool image holder figure image prototype composite figure prototype { image prototype ; prototype prototype ; image prototype image prototype ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "svg application model { grid constrainer grid constrainer ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "list tool bar create tool bar application app view { linked list tool bar list linked list tool bar ; list ;   overriden create toolbars", "metadata": [], "label": "NOT_COHERENT"}
{"text": "convex hull outline handle svg path figure owner { owner false false ;   creates bound outline handle resizing component", "metadata": [], "label": "NOT_COHERENT"}
{"text": "link handle figure owner { owner ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "event { event ;   bean event event commonly human bean", "metadata": [], "label": "COHERENT"}
{"text": "property { property ;   bean property property commonly initially chosen update human customizing bean", "metadata": [], "label": "COHERENT"}
{"text": "view source action application app view view { app view ; resource bundle util label resource bundle util bundle org jhotdraw sample svg label ; label configure action ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "combine action drawing editor editor { editor svg path figure true true ;   creates instance", "metadata": [], "label": "NOT_COHERENT"}
{"text": "segment tolerance { apply inverse transform transform null { { transform inverse transform ; } noninvertible transform exception { system err println warning svg bezier figure segment figure ha noninvertible transform ; } } bezier path segment tolerance ;   segment polyline hit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "drawing create drawing { svg panel create drawing ;   creates drawing view", "metadata": [], "label": "COHERENT"}
{"text": "pageable create pageable { drawing pageable svg panel drawing ;   creates pageable object printing view", "metadata": [], "label": "COHERENT"}
{"text": "init component { svg panel org jhotdraw sample svg svg drawing panel ; set layout java awt border layout ; add svg panel java awt border layout center ;   method called constructor initialize form", "metadata": [], "label": "NOT_COHERENT"}
{"text": "init action { action map undo action undo undo action ; action map redo action undo redo action ;   initializes view specific action", "metadata": [], "label": "COHERENT"}
{"text": "title style locale locale font font paint paint { style locale font paint title bottom title title middle inset ;   standard constructor build title object attribute location bottom alignment inset inset", "metadata": [], "label": "COHERENT"}
{"text": "title style locale locale font font paint paint position horizontal alignment vertical alignment inset inset { format instance style locale format font paint position horizontal alignment vertical alignment inset ;   constructor build title attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "item gap percent { item gap percent ;   gap bar category measured java user space unit", "metadata": [], "label": "COHERENT"}
{"text": "set intro gap percent percent { intro gap percent percent { intro gap percent math min percent max intro gap percent ; notify listener plot change event ;   set gap bar chart notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set vertical axis axis axis axis compatible exception { set vertical axis axis ;   set vertical axis plot", "metadata": [], "label": "COHERENT"}
{"text": "intro gap percent { intro gap percent ;   gap bar chart percentage drawing space", "metadata": [], "label": "COHERENT"}
{"text": "set horizontal axis axis axis axis compatible exception { set horizontal axis axis ;   set horizontal axis plot", "metadata": [], "label": "COHERENT"}
{"text": "category dataset dataset { category dataset chart dataset ;   convenience method dataset plot cast category dataset", "metadata": [], "label": "COHERENT"}
{"text": "trail gap percent { trail gap percent ;   gap bar chart percentage drawing space", "metadata": [], "label": "COHERENT"}
{"text": "java util list category { dataset category ;   convenience method list category data source", "metadata": [], "label": "COHERENT"}
{"text": "set label font font font { check argument font null { illegal argument exception axis set label font null permitted ; } change label font equal font { label font font ; notify listener axis change event ;   set font axis label", "metadata": [], "label": "COHERENT"}
{"text": "set tick mark visible flag { flag tick mark visible { tick mark visible flag ; notify listener axis change event ;   set flag tick mark", "metadata": [], "label": "COHERENT"}
{"text": "inset tick label inset { tick label inset ;   inset tick label", "metadata": [], "label": "COHERENT"}
{"text": "set tick mark stroke stroke stroke { check argument stroke null { illegal argument exception axis set tick mark stroke null permitted ; } change tick mark stroke equal stroke { tick mark stroke stroke ; notify listener axis change event ;   set pen brush draw tick mark", "metadata": [], "label": "COHERENT"}
{"text": "string label { label ;   label axis", "metadata": [], "label": "COHERENT"}
{"text": "tick label visible { tick label visible ;   flag indicating tick label visible", "metadata": [], "label": "COHERENT"}
{"text": "inset label inset { label inset ;   inset label", "metadata": [], "label": "COHERENT"}
{"text": "stroke tick mark stroke { tick mark stroke ;   pen brush draw tick mark", "metadata": [], "label": "COHERENT"}
{"text": "tick mark visible { tick mark visible ;   flag tick mark", "metadata": [], "label": "COHERENT"}
{"text": "notify listener axis change event event { java util iterator iterator listener iterator ; iterator ha { axis change listener listener axis change listener iterator ; listener axis changed event ;   notifies registered listener axis ha changed", "metadata": [], "label": "COHERENT"}
{"text": "remove change listener axis change listener listener { listener remove listener ;   deregisters object notification change axis", "metadata": [], "label": "COHERENT"}
{"text": "plot plot { plot ;   plot axis assigned", "metadata": [], "label": "COHERENT"}
{"text": "set label paint paint paint { check argument paint null { illegal argument exception axis set label paint null permitted ; } change label paint equal paint { label paint paint ; notify listener axis change event ;   set color shade draw axis label", "metadata": [], "label": "COHERENT"}
{"text": "set tick label inset inset inset { check argument inset null { illegal argument exception axis set tick label inset null permitted ; } apply change tick label inset equal inset { tick label inset inset ; notify listener axis change event ;   set inset tick label notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set label inset inset inset { inset equal label inset { label inset inset ; notify listener axis change event ;   set inset axis label notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "axis string label { label axis label font axis label paint axis label inset true tick label visible tick label font tick label paint tick label inset true tick mark visible tick stroke ;   construct axis", "metadata": [], "label": "COHERENT"}
{"text": "set plot plot plot plot compatible exception { compatible plot plot { plot plot ; } plot compatible exception axis set plot plot compatible axis ;   set reference plot axis assigned", "metadata": [], "label": "COHERENT"}
{"text": "set tick label paint paint paint { check argument paint null { illegal argument exception axis set tick label paint null permitted ; } change tick label paint equal paint { tick label paint paint ; notify listener axis change event ;   set color shade draw tick label", "metadata": [], "label": "COHERENT"}
{"text": "paint fill paint { fill paint ;   paint object fill bar", "metadata": [], "label": "COHERENT"}
{"text": "bar width height { width height basic stroke color gray color green ;   standard constructor bar object attribute", "metadata": [], "label": "COHERENT"}
{"text": "rectangle { ;   rectangle outline bar", "metadata": [], "label": "COHERENT"}
{"text": "paint outline paint { outline paint ;   paint object draw outline bar", "metadata": [], "label": "COHERENT"}
{"text": "bar width height stroke outline stroke paint outline paint paint fill paint { rectangle width height ; outline stroke outline stroke ; outline paint outline paint ; fill paint fill paint ;   constructor bar object attribute defined caller", "metadata": [], "label": "COHERENT"}
{"text": "stroke outline stroke { outline stroke ;   stroke object draw outline bar", "metadata": [], "label": "COHERENT"}
{"text": "minimum { minimum ;   earliest visible axis", "metadata": [], "label": "COHERENT"}
{"text": "maximum { maximum ;   visible axis", "metadata": [], "label": "COHERENT"}
{"text": "standard field unit { previous previous standard field unit ; calendar calendar calendar instance ; calendar set time previous ; calendar add field unit ; calendar time ;   standard", "metadata": [], "label": "COHERENT"}
{"text": "set maximum maximum { maximum maximum ; notify listener axis change event ;   set maximum visible axis", "metadata": [], "label": "COHERENT"}
{"text": "set minimum minimum { minimum minimum ; notify listener axis change event ;   set minimum visible axis", "metadata": [], "label": "COHERENT"}
{"text": "axis string label { label ; minimum ; maximum ; tick unit unit calendar ; tick label formatter simple format ;   standard constructor build axis attribute", "metadata": [], "label": "COHERENT"}
{"text": "axis magnitude { axis magnitude maximum time minimum time ; ; standard tick unit magnitude length { axis magnitude standard tick unit magnitude ; ; } math max ;   largest tick unit fit axis range", "metadata": [], "label": "COHERENT"}
{"text": "calculate lowest visible tick unit unit { standard minimum unit field unit count ;   calculates lowest visible tick axis", "metadata": [], "label": "COHERENT"}
{"text": "add change listener title change listener listener { listener add listener ;   register object notification change title", "metadata": [], "label": "COHERENT"}
{"text": "remove change listener title change listener listener { listener remove listener ;   unregisters object notification change chart title", "metadata": [], "label": "COHERENT"}
{"text": "set notify flag { notify flag ;   set flag notification mechanism enabled", "metadata": [], "label": "COHERENT"}
{"text": "notify { notify ;   flag notification mechanism enabled", "metadata": [], "label": "COHERENT"}
{"text": "set horizontal alignment alignment { horizontal alignment alignment { horizontal alignment alignment ; notify listener title change event ;   set horizontal alignment title notifies registered listener change", "metadata": [], "label": "COHERENT"}
{"text": "position { position ;   relative position title represented integer constant defined top bottom left", "metadata": [], "label": "COHERENT"}
{"text": "vertical alignment { vertical alignment ;   vertical alignment title", "metadata": [], "label": "COHERENT"}
{"text": "horizontal alignment { horizontal alignment ;   horizontal alignment title", "metadata": [], "label": "COHERENT"}
{"text": "inset inset { inset ;   inset title", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis { null ;   consrtucts vertical axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "translated data rectangle plot { data ; axis min minimum axis ; axis max maximum axis ; max plot max ; min plot min ; max axis min axis max axis min max min ;   translates data display coordinate chart", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis string label { label axis axis label font axis minimum axis axis maximum axis ; auto range true ;   construct vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "configure { auto range { auto adjust range ;   configures axis plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set label drawn vertical flag { label drawn vertical flag { label drawn vertical flag ; notify listener axis change event ;   set flag control axis label drawn vertical orientation", "metadata": [], "label": "COHERENT"}
{"text": "minimum horizontal data { dataset data chart dataset ; data null { datasets minimum domain data ; } null ;   minimum domain range whichever displayed horizontal axis type plot implementing", "metadata": [], "label": "NOT_COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum datasource", "metadata": [], "label": "COHERENT"}
{"text": "maximum vertical data { dataset data chart dataset ; data null { datasets maximum range data ; } null ;   maximum datasource", "metadata": [], "label": "COHERENT"}
{"text": "vertical xy bar plot axis horizontal axis axis vertical axis axis compatible exception plot compatible exception { horizontal axis vertical axis ;   standard constructor", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis true ; false ;   true axis compatible plot regard operating vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "maximum horizontal data { dataset data chart dataset ; data null { datasets maximum domain data ; } null ;   maximum domain range whichever displayed horizontal axis type plot implementing", "metadata": [], "label": "COHERENT"}
{"text": "string { linear fit ; }   legend", "metadata": [], "label": "NOT_COHERENT"}
{"text": "bar width category category dataset data { data series count ;   method renderer bar width category onebarwidth series category", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "vertical bar plot axis horizontal axis axis vertical axis axis compatible exception plot compatible exception { horizontal axis vertical axis inset ;   standard constructor build vertical bar plot attribute", "metadata": [], "label": "COHERENT"}
{"text": "vertical bar plot axis horizontal axis vertical inset inset intro gap trail gap category gap series gap axis compatible exception plot compatible exception { horizontal vertical inset intro gap trail gap category gap series gap ;   standard constructor bar plot attribute caller", "metadata": [], "label": "NOT_COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "add vertical location paint color { vertical null { vertical array list ; vertical color array list ; } vertical color add color ; vertical add location ;   add vertical color location color", "metadata": [], "label": "COHERENT"}
{"text": "axis horizontal axis { axis horizontal axis ;   convenience method reference horizontal axis cast axis", "metadata": [], "label": "COHERENT"}
{"text": "xy plot axis horizontal axis axis vertical axis axis compatible exception plot compatible exception { horizontal axis vertical axis ; renderer standard xy item renderer ;   construct xy plot ax", "metadata": [], "label": "COHERENT"}
{"text": "add horizontal location paint color { horizontal null { horizontal array list ; horizontal color array list ; } horizontal color add color ; horizontal add location ;   add horizontal location color", "metadata": [], "label": "COHERENT"}
{"text": "string plot type { xy plot ;   plot type string", "metadata": [], "label": "COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted vertical axis xy plot", "metadata": [], "label": "COHERENT"}
{"text": "category axis category axis { category axis horizontal axis ;   convenience method reference horizontal axis cast category axis", "metadata": [], "label": "COHERENT"}
{"text": "string plot type { bar plot ;   string describing type plot", "metadata": [], "label": "COHERENT"}
{"text": "set xy item renderer xy item renderer renderer { renderer renderer ; notify listener plot change event ;   set item renderer notifies listener change plot", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis category axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "draw horizontal graphic rectangle plot { draw horizontal horizontal null { ; horizontal size ; { set paint paint horizontal color ; set stroke basic stroke ; draw vertical axis translated horizontal plot plot width vertical axis translated horizontal plot ;   support method draw", "metadata": [], "label": "NOT_COHERENT"}
{"text": "add horizontal location { add horizontal location color red ;   add horizontal location color red", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis { true ; } axis horizontal axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "xy item renderer item renderer { renderer ;   reference current item renderer", "metadata": [], "label": "COHERENT"}
{"text": "add vertical location { add vertical location color blue ;   add vertical location color blue", "metadata": [], "label": "COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted vertical axis bar plot", "metadata": [], "label": "COHERENT"}
{"text": "xy dataset dataset { xy dataset chart dataset ;   convenience method dataset plot cast xy dataset", "metadata": [], "label": "COHERENT"}
{"text": "java util list category { dataset category ;   convenience method list category dataset", "metadata": [], "label": "COHERENT"}
{"text": "draw outline background graphic shape { background paint null { set paint background paint ; fill ; } outline stroke null outline paint null { set stroke outline stroke ; set paint outline paint ; draw ;   draw plot outline background", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis axis { vertical axis vertical axis ;   convenience method reference vertical axis cast vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "paint grid paint { grid paint ;   paint color grid", "metadata": [], "label": "COHERENT"}
{"text": "set grid stroke stroke stroke { grid stroke stroke ; notify listener axis change event ;   set stroke draw grid notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set auto tick flag { auto tick unit flag { auto tick unit flag ; notify listener axis change event ;   set flag indicating tick unit automatically selected range standard tick unit", "metadata": [], "label": "COHERENT"}
{"text": "axis string label { label ; auto range true ; auto tick unit true ; grid true ; grid stroke axis grid stroke ; grid paint color gray ;   construct axis", "metadata": [], "label": "COHERENT"}
{"text": "set auto range auto { auto range auto { auto range auto ; auto range auto adjust range ; notify listener axis change event ;   set flag determines axis range automatically adjusted fit data notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "auto tick unit { auto tick unit ;   flag indicating tick unit automatically selected range standard tick unit", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis string label font label font minimum axis maximum axis { label label font color black inset true true font arial font plain color black inset true basic stroke false true minimum axis maximum axis true axis tick unit decimal format false basic stroke color light gray ;   standard constructor vertical axis attribute", "metadata": [], "label": "COHERENT"}
{"text": "auto range { auto range ;   true axis range automatically adjusted fit data false", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis string label { label ;   standard constructor build vertical axis attribute", "metadata": [], "label": "COHERENT"}
{"text": "set title string text { title text ;   set title text notifies registered listener title ha modified", "metadata": [], "label": "NOT_COHERENT"}
{"text": "remove change listener title change listener listener { listener remove listener ;   unregisters object notification change chart title", "metadata": [], "label": "COHERENT"}
{"text": "title string title { title title ; listener java util array list ;   standard constructor build title object", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis { null ;   constructor", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   axis deep axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string title { title ;   title text", "metadata": [], "label": "COHERENT"}
{"text": "add change listener title change listener listener { listener add listener ;   register object notification change title", "metadata": [], "label": "COHERENT"}
{"text": "string text { text ;   text version tick", "metadata": [], "label": "COHERENT"}
{"text": "tick string text { text text ;   incoherencetype", "metadata": [], "label": "COHERENT"}
{"text": "tick object string text { ; text text ; ; ;   incoherencetype", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   coordinate tick", "metadata": [], "label": "COHERENT"}
{"text": "numerical { { ; } { time ; } null ;   numerical tick null", "metadata": [], "label": "COHERENT"}
{"text": "draw graphic rectangle title { position top position bottom { draw horizontal title ; } runtime exception text title draw invalid title position ;   incoherencetype", "metadata": [], "label": "NOT_COHERENT"}
{"text": "paint paint { paint ;   paint display title", "metadata": [], "label": "COHERENT"}
{"text": "font font { font ;   current title font", "metadata": [], "label": "COHERENT"}
{"text": "preferred width graphic { set font font ; font render context frc font render context ; rectangle title bound font string bound text frc ; title width inset left title bound width inset ; title width ;   preferred width title", "metadata": [], "label": "COHERENT"}
{"text": "set paint paint paint { paint equal paint { paint paint ; notify listener title change event ;   set paint display title notifies registered listener title ha modified", "metadata": [], "label": "COHERENT"}
{"text": "text title string text { text font dialog font plain ;   constructor build text title attribute", "metadata": [], "label": "COHERENT"}
{"text": "valid position position { position title top position title bottom true ; false ;   true position valid text title false position", "metadata": [], "label": "NOT_COHERENT"}
{"text": "text title string text font font paint paint position horizontal alignment vertical alignment inset inset { position horizontal alignment vertical alignment inset ; text text ; font font ; paint paint ;   constructor build text title property", "metadata": [], "label": "COHERENT"}
{"text": "set font font font { font equal font { font font ; notify listener title change event ;   set title font font notifies registered listener title ha modified", "metadata": [], "label": "COHERENT"}
{"text": "text title string text font font paint paint { text font paint top center middle inset ;   constructor build text title attribute", "metadata": [], "label": "COHERENT"}
{"text": "preferred height graphic { set font font ; font render context frc font render context ; metric metric font metric text frc ; title height inset top metric height inset bottom ; title height ;   preferred height title", "metadata": [], "label": "COHERENT"}
{"text": "string text { text ;   title text", "metadata": [], "label": "COHERENT"}
{"text": "free chart chart { chart ;   reference chart generated change event", "metadata": [], "label": "COHERENT"}
{"text": "set chart free chart chart { chart chart ;   set chart generated change event", "metadata": [], "label": "COHERENT"}
{"text": "chart change event object source free chart chart type { source ; chart chart ; type type ;   constructor chart change event object type", "metadata": [], "label": "COHERENT"}
{"text": "chart change event object source { source null ;   standard constructor chart change event object type", "metadata": [], "label": "COHERENT"}
{"text": "chart change event object source free chart chart { source chart ;   standard constructor chart change event object type", "metadata": [], "label": "COHERENT"}
{"text": "plot shape { plot shape ;   true shape plotted renderer", "metadata": [], "label": "COHERENT"}
{"text": "standard xy item renderer type { type shape plot shape true ; type plot true ; type shape { plot shape true ; plot true ;   standard constructor", "metadata": [], "label": "COHERENT"}
{"text": "plot { plot ;   true plotted renderer", "metadata": [], "label": "COHERENT"}
{"text": "tick unit nearest tick unit tick unit unit { collection binary search unit unit ; { tick unit unit ; } { ; tick unit unit math min unit size ;   tick unit collection closest size unit", "metadata": [], "label": "COHERENT"}
{"text": "ha item gap { true ;   true renderer gap item category", "metadata": [], "label": "COHERENT"}
{"text": "string series series { series { cosine ; } series { sine ; } error ;   series", "metadata": [], "label": "NOT_COHERENT"}
{"text": "sample xy dataset { translate ;   constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series count { ;   series data source", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series item { series { math translate item ; } math sin translate item ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "configure { auto range { auto adjust range ;   configures axis plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "translated rectangle plot { time ; axis min minimum time ; axis max maximum time ; plot plot ; plot max plot max ; plot axis min axis max axis min plot max plot ;   translates data display coordinate chart", "metadata": [], "label": "COHERENT"}
{"text": "set vertical tick label flag { vertical tick label flag ; notify listener jrefinery chart event axis change event ;   set flag determines tick label drawn vertically", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis string label { label ; vertical tick label false ;   incoherencetype", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis string label font label font minimum maximum { label label font color black inset true font arial font plain color black inset true true basic stroke false minimum maximum false unit calendar simple format false null null ;   standard constructor horizontal axis attribute", "metadata": [], "label": "COHERENT"}
{"text": "translated data rectangle plot { data ; axis min minimum time ; axis max maximum time ; plot plot ; plot max plot max ; plot axis min axis max axis min plot max plot ;   translates data display coordinate chart", "metadata": [], "label": "COHERENT"}
{"text": "set draw close tick draw { draw close draw { draw close draw ; notify listener plot change event ;   set property plot draw close mark", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis { true ; } axis horizontal axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "maximum horizontal data { dataset data chart dataset ; data null { datasets maximum domain data ; } null ;   maximum domain plotted horizontal axis low plot", "metadata": [], "label": "COHERENT"}
{"text": "low plot axis horizontal axis axis vertical axis axis compatible exception plot compatible exception { horizontal axis vertical axis ;   standard constructor low plot attribute caller", "metadata": [], "label": "COHERENT"}
{"text": "low dataset dataset { low dataset chart dataset ;   convenience method dataset plot cast low dataset", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis true ; false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "axis horizontal axis { axis horizontal axis ;   convenience method reference horizontal axis cast horizontal axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "axis vertical axis { axis vertical axis ;   convenience method reference vertical axis cast vertical axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted vertical axis low plot", "metadata": [], "label": "COHERENT"}
{"text": "minimum horizontal data { dataset data chart dataset ; data null { datasets minimum domain data ; } null ;   minimum domain plotted horizontal axis low plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set renderer horizontal bar renderer renderer { renderer renderer ; notify listener plot change event ;   set renderer bar plot", "metadata": [], "label": "COHERENT"}
{"text": "minimum horizontal data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted horizontal axis horizontal bar plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical category axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "category axis category axis { category axis vertical axis ;   convenience method reference horizontal axis cast category axis", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis axis { horizontal axis horizontal axis ;   convenience method reference vertical axis cast vertical axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string plot type { horizontal bar plot ;   string describing type plot", "metadata": [], "label": "COHERENT"}
{"text": "horizontal bar plot axis horizontal axis axis vertical axis axis compatible exception plot compatible exception { horizontal axis vertical axis ; renderer horizontal bar renderer ;   construct horizontal bar plot ax", "metadata": [], "label": "COHERENT"}
{"text": "close tick { tick close tick size ;   ", "metadata": [], "label": "COHERENT"}
{"text": "set type { type ; close ;   set close depending type", "metadata": [], "label": "COHERENT"}
{"text": "set tick size size { tick size size ;   set width close tick", "metadata": [], "label": "COHERENT"}
{"text": "tick size { tick size ;   width close tick", "metadata": [], "label": "COHERENT"}
{"text": "low low close stroke stroke paint paint { low ; ; close close ; stroke stroke ; paint paint ;   construct low item", "metadata": [], "label": "COHERENT"}
{"text": "tick { tick tick size ;   tick", "metadata": [], "label": "COHERENT"}
{"text": "type { type ; close ;   close depending type", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   ", "metadata": [], "label": "COHERENT"}
{"text": "low low { low low basic stroke color blue ;   construct low item close color", "metadata": [], "label": "COHERENT"}
{"text": "low low close { low close basic stroke color blue ;   construct low item color", "metadata": [], "label": "COHERENT"}
{"text": "count { count ;   unit", "metadata": [], "label": "COHERENT"}
{"text": "vertical tick label { vertical tick label ;   flag indicating tick label drawn vertically", "metadata": [], "label": "COHERENT"}
{"text": "set vertical tick label flag { vertical tick label flag ; notify listener jrefinery chart event axis change event ;   set flag determines tick label drawn vertically", "metadata": [], "label": "COHERENT"}
{"text": "translated data rectangle plot { data ; axis min minimum axis ; axis max maximum axis ; plot plot ; plot max plot max ; plot axis min axis max axis min plot max plot ;   translates data display coordinate chart", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis string label { label axis axis label font axis minimum axis axis maximum axis ; auto range true ;   construct horizontal axis", "metadata": [], "label": "COHERENT"}
{"text": "vertical category label { vertical category label ;   flag indicating category label drawn vertically", "metadata": [], "label": "COHERENT"}
{"text": "set vertical category label flag { vertical category label flag ; notify listener jrefinery chart event axis change event ;   set flag determines category label drawn vertically", "metadata": [], "label": "COHERENT"}
{"text": "compatible plot plot plot { plot category plot true ; false ;   true plot compatible axis false", "metadata": [], "label": "COHERENT"}
{"text": "create month day { gregorian calendar calendar gregorian calendar month day ; calendar time ;   java util month day", "metadata": [], "label": "COHERENT"}
{"text": "main string args { free chart demo free chart demo ; pack ; swing refinery center frame screen ; ;   starting demonstration application", "metadata": [], "label": "COHERENT"}
{"text": "category dataset create single series category dataset { data integer { { integer integer integer integer } } ; category dataset data ;   creates category dataset demo chart", "metadata": [], "label": "COHERENT"}
{"text": "window closed window event { window info frame { info frame null ; } window frame { frame null ;   reference print preview frame closed", "metadata": [], "label": "COHERENT"}
{"text": "{ frame null { frame frame free chart version free chart version http jrefinery jfreechart licence lgpl ; frame pack ; swing refinery center frame screen frame ; } frame ; frame request focus ;   display application", "metadata": [], "label": "COHERENT"}
{"text": "dimension preferred size { preferred size ;   preferred size frame", "metadata": [], "label": "COHERENT"}
{"text": "plot fit xy dataset data plot fit algorithm alg { dataset data ; alg alg ;   standard constructor", "metadata": [], "label": "COHERENT"}
{"text": "series item { null ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string series series { null ;   series", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string series series { sample series ;   series", "metadata": [], "label": "COHERENT"}
{"text": "sample xy dataset { series ; series series count ; series { item ; item item count ; item { math random range ; series item ; series item math random ;   constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series item { series { item ; } null ;   series item", "metadata": [], "label": "COHERENT"}
{"text": "item count series { ; series item sample   item series", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series item { series { close item ; } null ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "low series item { series { low item ; } null ;   low series item", "metadata": [], "label": "COHERENT"}
{"text": "series item { item time ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set period period { period period ;   set period moving average algorithm", "metadata": [], "label": "COHERENT"}
{"text": "string { moving average ;   legend", "metadata": [], "label": "NOT_COHERENT"}
{"text": "tick label visible { tick label check box selected ;   flag tick label visible", "metadata": [], "label": "COHERENT"}
{"text": "font label font { label font ;   current label font", "metadata": [], "label": "COHERENT"}
{"text": "axis property edit panel instance axis axis { axis null { figure type axis instantiate panel axis axis { axis property edit panel axis axis ; } axis property edit panel axis ; } null ;   method panel axis type", "metadata": [], "label": "COHERENT"}
{"text": "inset label inset { label inset null inset label inset ;   current label inset", "metadata": [], "label": "COHERENT"}
{"text": "font tick label font { tick label font ;   font draw tick label", "metadata": [], "label": "COHERENT"}
{"text": "tick mark visible { tick mark check box selected ;   current flag determines tick mark visible", "metadata": [], "label": "COHERENT"}
{"text": "string label { label text ;   current axis label", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify label paint { color ; color chooser dialog label color color blue ; null { label paint sample set paint ;   user opportunity change outline paint", "metadata": [], "label": "COHERENT"}
{"text": "paint tick label paint { tick label paint sample paint ;   current tick label paint", "metadata": [], "label": "COHERENT"}
{"text": "paint label paint { label paint sample paint ;   current label paint", "metadata": [], "label": "COHERENT"}
{"text": "maximum { maximum ;   current setting maximum axis range", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify series paint { color ; color chooser dialog series label color color blue ; null { series paint set paint ;   user opportunity change series label paint", "metadata": [], "label": "COHERENT"}
{"text": "font series font { series font ;   current series label font", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify series font { font chooser panel panel font chooser panel series font ; result option pane confirm dialog panel font selection option pane cancel option option pane plain message ; result option pane option { series font panel selected font ;   user opportunity change series label font", "metadata": [], "label": "COHERENT"}
{"text": "paint series paint { series paint paint ;   current series label paint", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify outline paint { color ; color chooser dialog outline color color blue ; null { outline paint set paint ;   user opportunity change outline paint", "metadata": [], "label": "COHERENT"}
{"text": "edit inset { inset chooser panel panel inset chooser panel inset ; result option pane confirm dialog panel edit inset option pane cancel option option pane plain message ; result option pane option { inset panel inset ; inset text field set inset inset ;   user edit individual inset", "metadata": [], "label": "COHERENT"}
{"text": "attempt outline paint selection { color ; color chooser dialog outline color color blue ; null { outline paint sample set paint ;   user change outline paint", "metadata": [], "label": "COHERENT"}
{"text": "stroke outline stroke { outline stroke sample stroke ;   current outline stroke", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint sample paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "axis property edit panel vertical axis property edit panel { vertical axis property panel ;   reference panel editing property vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "inset plot inset { inset null inset inset ; inset ;   current plot inset", "metadata": [], "label": "COHERENT"}
{"text": "attempt outline stroke selection { stroke chooser panel panel stroke chooser panel null stroke sample ; result option pane confirm dialog panel stroke selection option pane cancel option option pane plain message ; result option pane option { outline stroke sample set stroke panel selected stroke ;   user change outline stroke", "metadata": [], "label": "COHERENT"}
{"text": "attempt background paint selection { color ; color chooser dialog background color color blue ; null { background paint sample set paint ;   user change background paint", "metadata": [], "label": "COHERENT"}
{"text": "legend property edit panel legend property edit panel { legend property panel ;   reference legend property panel", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify background paint { color ; color chooser dialog background color color blue ; null { background set paint ;   user opportunity select background paint", "metadata": [], "label": "COHERENT"}
{"text": "action performed action event event { string command event action command ; command equal select font { attempt font selection ; } command equal select paint { attempt paint selection ;   handle button click passing control handler method", "metadata": [], "label": "COHERENT"}
{"text": "paint title paint { title paint paint ;   paint selected panel", "metadata": [], "label": "COHERENT"}
{"text": "set title property title title { title standard title { support standard title standard title standard standard title title ; standard set title title ; standard set title font title font ; standard set title paint title paint ;   set property title match property defined panel", "metadata": [], "label": "COHERENT"}
{"text": "font title font { title font ;   font selected panel", "metadata": [], "label": "COHERENT"}
{"text": "low low { low low basic stroke color blue ;   construct low item close color", "metadata": [], "label": "COHERENT"}
{"text": "close tick { tick close tick size ;   ", "metadata": [], "label": "COHERENT"}
{"text": "type { type ; close ;   close depending type", "metadata": [], "label": "COHERENT"}
{"text": "{ ;   ", "metadata": [], "label": "COHERENT"}
{"text": "stroke stroke { stroke ;   stroke object draw", "metadata": [], "label": "COHERENT"}
{"text": "tick size { tick size ;   width close tick", "metadata": [], "label": "COHERENT"}
{"text": "low low close stroke stroke paint paint { low ; ; close close ; stroke stroke ; paint paint ;   construct low item", "metadata": [], "label": "COHERENT"}
{"text": "vertical alignment { vertical alignment ;   vertical alignment title", "metadata": [], "label": "COHERENT"}
{"text": "set horizontal alignment alignment { horizontal alignment alignment { horizontal alignment alignment ; notify listener title change event ;   set horizontal alignment title notifies registered listener change", "metadata": [], "label": "COHERENT"}
{"text": "set vertical alignment alignment { vertical alignment alignment { vertical alignment alignment ; notify listener title change event ;   set vertical alignment title notifies registered listener change", "metadata": [], "label": "COHERENT"}
{"text": "title { title position title horizontal alignment title vertical alignment ;   constructor build title positioned top centered horizontally vertically space", "metadata": [], "label": "COHERENT"}
{"text": "horizontal bar plot axis horizontal axis axis vertical axis { horizontal axis vertical axis plot inset bar plot intro gap percent bar plot trail gap percent bar plot category gap percent bar plot item gap percent null ; renderer horizontal bar renderer ;   construct horizontal bar plot", "metadata": [], "label": "COHERENT"}
{"text": "maximum horizontal data { dataset data chart dataset ; data null { datasets maximum range data ; } null ;   maximum range plotted horizontal axis horizontal bar plot", "metadata": [], "label": "COHERENT"}
{"text": "set inset inset inset { inset equal inset { inset inset ; notify listener title change event ;   set inset title notifies registered listener change", "metadata": [], "label": "COHERENT"}
{"text": "java util list category { dataset category ;   convenience method list category data source", "metadata": [], "label": "COHERENT"}
{"text": "inset inset { inset ;   inset title", "metadata": [], "label": "COHERENT"}
{"text": "set notify flag { notify flag ;   set flag notification mechanism enabled", "metadata": [], "label": "COHERENT"}
{"text": "remove change listener title change listener listener { listener remove listener ;   unregisters object notification change chart title", "metadata": [], "label": "COHERENT"}
{"text": "category dataset dataset { category dataset chart dataset ;   convenience method dataset plot cast category dataset", "metadata": [], "label": "COHERENT"}
{"text": "title position horizontal alignment vertical alignment { position horizontal alignment vertical alignment title inset ;   construct title", "metadata": [], "label": "COHERENT"}
{"text": "add change listener title change listener listener { listener add listener ;   register object notification change title", "metadata": [], "label": "COHERENT"}
{"text": "category axis category axis { category axis vertical axis ;   convenience method reference horizontal axis cast category axis", "metadata": [], "label": "COHERENT"}
{"text": "notify { notify ;   flag notification mechanism enabled", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "set position position { position position { check position valid position position ; notify listener title change event ;   set position title", "metadata": [], "label": "COHERENT"}
{"text": "position { position ;   relative position title represented integer constant defined top bottom left", "metadata": [], "label": "COHERENT"}
{"text": "notify listener title change event event { notify { java util iterator iterator listener iterator ; iterator ha { title change listener listener title change listener iterator ; listener title changed event ;   notifies registered listener chart title ha changed", "metadata": [], "label": "COHERENT"}
{"text": "object clone { title duplicate null ; { duplicate title clone ; } clone supported exception { happen cloneable implemented runtime exception title clone ; } duplicate set notify false ; duplicate set inset inset inset clone ; duplicate set notify true ; duplicate ;   clone title", "metadata": [], "label": "COHERENT"}
{"text": "candlestick renderer candle width { candle width candle width ;   creates renderer", "metadata": [], "label": "COHERENT"}
{"text": "handle click draw info info { set anchor horizontal axis axis hva range axis ; hvalue hva translate java dto info data ; hva set anchor hvalue ; hva set crosshair hvalue ;   handle click plot updating anchor", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical category axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "set renderer horizontal bar renderer renderer { renderer renderer ; notify listener plot change event ;   set renderer bar plot", "metadata": [], "label": "COHERENT"}
{"text": "save chart png file file free chart chart width height io exception { data output stream data output stream buffered output stream file output stream file ; write chart png chart width height ; close ;   save chart png format image file", "metadata": [], "label": "COHERENT"}
{"text": "write chart png output stream free chart chart width height io exception { buffered image chart image chart create buffered image width height ; png encoder encoder png encoder chart image false ; png data encoder png encode ; write png data ;   writes chart output stream png format", "metadata": [], "label": "COHERENT"}
{"text": "count { count ;   unit", "metadata": [], "label": "COHERENT"}
{"text": "field { field ;   field unit", "metadata": [], "label": "COHERENT"}
{"text": "unit field count { field field ; count count ;   build unit", "metadata": [], "label": "COHERENT"}
{"text": "calculate visible tick unit unit { previous standard maximum unit field unit count ;   calculates visible tick axis", "metadata": [], "label": "COHERENT"}
{"text": "combined chart create combinable xy chart axis horizontal axis vertical dataset data { xy plot plot xy plot horizontal vertical ; plot set xy item renderer standard xy item renderer standard xy item renderer ; create combinable chart data plot ;   creates combinable xy plot setting", "metadata": [], "label": "COHERENT"}
{"text": "combined chart create combinable vertical xy bar chart axis horizontal axis vertical dataset data { vertical xy bar plot plot vertical xy bar plot horizontal vertical ; create combinable chart data plot ;   creates instance vertical xy bar combinable chart based dataset", "metadata": [], "label": "COHERENT"}
{"text": "combined chart create combinable low chart axis horizontal axis vertical dataset data { xy plot plot xy plot horizontal vertical ; plot set xy item renderer low renderer ; create combinable chart data plot ;   creates instance low close combinable chart based dataset", "metadata": [], "label": "COHERENT"}
{"text": "free chart create pie chart string title pie dataset data legend { plot plot pie plot ; free chart chart free chart data plot title free chart title font legend ; chart ;   creates pie chart setting", "metadata": [], "label": "COHERENT"}
{"text": "set maximum maximum { maximum maximum ; millis maximum time ; set maximum axis millis ;   set maximum visible axis", "metadata": [], "label": "COHERENT"}
{"text": "minimum { minimum ;   earliest visible axis", "metadata": [], "label": "COHERENT"}
{"text": "set crosshair crosshair { crosshair crosshair ; millis crosshair time ; set crosshair millis ;   incoherencetype", "metadata": [], "label": "COHERENT"}
{"text": "calculate lowest visible tick unit unit { standard minimum unit field unit count ;   calculates lowest visible tick axis", "metadata": [], "label": "COHERENT"}
{"text": "bar width height stroke outline stroke paint outline paint paint fill paint { rectangle width height ; outline stroke outline stroke ; outline paint outline paint ; fill paint fill paint ;   constructor bar object attribute defined caller", "metadata": [], "label": "COHERENT"}
{"text": "anchor { anchor ;   anchor axis", "metadata": [], "label": "COHERENT"}
{"text": "bar width height { width height basic stroke color gray color green ;   standard constructor bar object attribute", "metadata": [], "label": "COHERENT"}
{"text": "standard field unit { previous previous standard field unit ; calendar calendar calendar instance ; calendar set time previous ; calendar add field unit ; calendar time ;   standard", "metadata": [], "label": "COHERENT"}
{"text": "stroke outline stroke { outline stroke ;   stroke object draw outline bar", "metadata": [], "label": "COHERENT"}
{"text": "crosshair { crosshair ;   crosshair axis", "metadata": [], "label": "COHERENT"}
{"text": "unit tick unit { tick unit ;   tick unit axis", "metadata": [], "label": "COHERENT"}
{"text": "maximum { maximum ;   visible axis", "metadata": [], "label": "COHERENT"}
{"text": "category axis string label { label axis axis label font axis axis label paint axis axis label inset true category label visible axis tick label font axis tick label paint axis tick label inset false tick mark visible supported axis tick stroke ;   construct category axis", "metadata": [], "label": "COHERENT"}
{"text": "set anchor anchor { anchor anchor ; millis anchor time ; set anchor millis ;   set anchor axis", "metadata": [], "label": "COHERENT"}
{"text": "title style { style locale font dialog font plain color black ;   construct title style", "metadata": [], "label": "COHERENT"}
{"text": "title { format ;   construct title display current format locale positioned bottom chart", "metadata": [], "label": "COHERENT"}
{"text": "title style locale locale font font paint paint position horizontal alignment vertical alignment inset inset { format instance style locale format font paint position horizontal alignment vertical alignment inset ;   construct title attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "title style locale locale font font paint paint { style locale font paint title bottom title title middle inset ;   construct title object attribute location bottom alignment inset inset", "metadata": [], "label": "COHERENT"}
{"text": "set tick label font font font { check argument font null { illegal argument exception axis set tick label font null permitted ; } apply change tick label font equal font { tick label font font ; notify listener axis change event ;   set font tick label", "metadata": [], "label": "COHERENT"}
{"text": "axis string label { label axis label font axis label paint axis label inset true tick label visible tick label font tick label paint tick label inset true tick mark visible tick stroke ;   construct axis", "metadata": [], "label": "COHERENT"}
{"text": "inset label inset { label inset ;   inset label", "metadata": [], "label": "COHERENT"}
{"text": "notify listener axis change event event { java util iterator iterator listener iterator ; iterator ha { axis change listener listener axis change listener iterator ; listener axis changed event ;   notifies registered listener axis ha changed", "metadata": [], "label": "COHERENT"}
{"text": "set label string label { string existing label ; existing null { existing equal label { label label ; notify listener axis change event ; } } { label null { label label ; notify listener axis change event ;   set label axis", "metadata": [], "label": "COHERENT"}
{"text": "font tick label font { tick label font ;   font tick label", "metadata": [], "label": "COHERENT"}
{"text": "set tick label paint paint paint { check argument paint null { illegal argument exception axis set tick label paint null permitted ; } change tick label paint equal paint { tick label paint paint ; notify listener axis change event ;   set color shade draw tick label", "metadata": [], "label": "COHERENT"}
{"text": "tick label visible { tick label visible ;   flag indicating tick label visible", "metadata": [], "label": "COHERENT"}
{"text": "tick mark visible { tick mark visible ;   flag tick mark", "metadata": [], "label": "COHERENT"}
{"text": "add change listener axis change listener listener { listener add listener ;   register object notification change axis", "metadata": [], "label": "COHERENT"}
{"text": "draw vertical string string text graphic { affine transform saved transform ; apply degree rotation affine transform rotate affine transform rotate instance math pi ; transform rotate ; draw string text ; set transform saved ;   utility method drawing text vertically", "metadata": [], "label": "COHERENT"}
{"text": "set label inset inset inset { inset equal label inset { label inset inset ; notify listener axis change event ;   set inset axis label notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set tick label visible flag { flag tick label visible { tick label visible flag ; notify listener axis change event ;   set flag determines tick label visible", "metadata": [], "label": "COHERENT"}
{"text": "set plot plot plot plot compatible exception { compatible plot plot plot null { plot plot ; } plot compatible exception axis set plot plot compatible axis ;   set reference plot axis assigned", "metadata": [], "label": "COHERENT"}
{"text": "remove change listener axis change listener listener { listener remove listener ;   deregisters object notification change axis", "metadata": [], "label": "COHERENT"}
{"text": "plot plot { plot ;   plot axis assigned", "metadata": [], "label": "COHERENT"}
{"text": "stroke tick mark stroke { tick mark stroke ;   pen brush draw tick mark", "metadata": [], "label": "COHERENT"}
{"text": "set tick label inset inset inset { check argument inset null { illegal argument exception axis set tick label inset null permitted ; } apply change tick label inset equal inset { tick label inset inset ; notify listener axis change event ;   set inset tick label notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "paint tick label paint { tick label paint ;   color shade tick label", "metadata": [], "label": "COHERENT"}
{"text": "item gap percent { item gap percent ;   percentage drawing space allocated providing gap item category", "metadata": [], "label": "COHERENT"}
{"text": "set vertical axis axis axis { set vertical axis axis ;   set vertical axis plot", "metadata": [], "label": "COHERENT"}
{"text": "category dataset dataset { category dataset chart dataset ;   convenience method dataset plot cast category dataset", "metadata": [], "label": "COHERENT"}
{"text": "trail gap percent { trail gap percent ;   gap bar chart percentage drawing space", "metadata": [], "label": "COHERENT"}
{"text": "intro gap percent { intro gap percent ;   gap bar chart percentage drawing space", "metadata": [], "label": "COHERENT"}
{"text": "set intro gap percent percent { check argument percent percent max intro gap percent { illegal argument exception bar plot set intro gap percent argument valid range ; } change intro gap percent percent { intro gap percent percent ; notify listener plot change event ;   set gap bar chart notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "category gap percent { category gap percent ;   percentage drawing space allocated providing gap category", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis true ; false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "xy dataset temp xy dataset { usefull signal dataset included jcommon series dataset xy dataset chart dataset ;   convenience method dataset plot cast low dataset", "metadata": [], "label": "NOT_COHERENT"}
{"text": "axis horizontal axis { axis horizontal axis ;   convenience method reference horizontal axis cast horizontal axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "maximum vertical data { null ; negative infinity ; doesn   maximum range plotted vertical axis low plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "axis vertical axis { axis vertical axis ;   convenience method reference vertical axis cast vertical axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string plot type { period marker plot ;   plot type string", "metadata": [], "label": "NOT_COHERENT"}
{"text": "minimum vertical data { positive infinity ; null doesn   minimum range plotted vertical axis low plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "plot axis horizontal axis axis vertical axis { horizontal axis vertical axis ; renderer shape renderer shape renderer shape ; intro gap percent intro gap ; trail gap percent trail gap ;   incoherencetype", "metadata": [], "label": "NOT_COHERENT"}
{"text": "category axis category axis { category axis horizontal axis ;   convenience method reference horizontal axis cast category axis", "metadata": [], "label": "COHERENT"}
{"text": "category dataset dataset { category dataset chart dataset ;   convenience method dataset plot cast category dataset", "metadata": [], "label": "COHERENT"}
{"text": "set trail gap percent percent { check argument percent percent max trail gap { illegal argument exception plot set trail gap percent gap percent valid range ; } change trail gap percent percent { trail gap percent percent ; notify listener plot change event ;   incoherencetype", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "java util list category { dataset category ;   convenience method list category data source", "metadata": [], "label": "COHERENT"}
{"text": "string plot type { plot ;   string describing plot type", "metadata": [], "label": "COHERENT"}
{"text": "tick unit tick unit { tick unit ;   tick unit axis", "metadata": [], "label": "COHERENT"}
{"text": "string string { format tick unit formatter format ;   convert string current format tick label axis", "metadata": [], "label": "COHERENT"}
{"text": "set auto range includes flag { auto range includes flag { auto range includes flag ; notify listener axis change event ;   set flag automatic axis range forced", "metadata": [], "label": "COHERENT"}
{"text": "set lower margin margin { lower margin margin ; notify listener axis change event ;   set lower margin", "metadata": [], "label": "COHERENT"}
{"text": "calculate lowest visible tick { min minimum axis ; unit tick unit ; math ceil minimum axis unit ; unit ;   calculates lowest visible tick axis", "metadata": [], "label": "COHERENT"}
{"text": "upper margin { upper margin ;   margin maximum axis exceeds maximum data", "metadata": [], "label": "COHERENT"}
{"text": "set standard tick unit tick unit unit { standard tick unit unit ; notify listener axis change event ;   set standard tick unit axis", "metadata": [], "label": "COHERENT"}
{"text": "set upper margin margin { upper margin margin ; notify listener axis change event ;   set upper margin", "metadata": [], "label": "COHERENT"}
{"text": "set tick unit tick unit unit { auto tick unit selection false ; tick unit unit ;   set tick unit axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "auto range minimum size { auto range minimum size ;   minimum size automatic axis range", "metadata": [], "label": "COHERENT"}
{"text": "tick unit format formatter { ; formatter formatter ;   creates tick unit", "metadata": [], "label": "NOT_COHERENT"}
{"text": "stroke stroke paint paint { ; stroke stroke ; paint paint ;   standard constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "shape renderer type { type shape plot shape true ; type plot true ; type shape { plot shape true ; plot true ;   construct renderer type", "metadata": [], "label": "COHERENT"}
{"text": "pie plot { interior gap true circular radius label label font label paint label gap inset null ;   construct pie plot", "metadata": [], "label": "COHERENT"}
{"text": "set radius percent percent { check argument percent percent max radius { illegal argument exception pie plot set radius percent percentage valid range ; } change radius percent percent { radius percent percent ; notify listener plot change event ;   set radius percentage", "metadata": [], "label": "COHERENT"}
{"text": "font label font { label font ;   label font", "metadata": [], "label": "COHERENT"}
{"text": "set interior gap percent percent { check argument percent percent max interior gap { illegal argument exception pie plot set interior gap percent percentage valid range ; } change interior gap percent percent { interior gap percent percent ; notify listener plot change event ;   set interior gap percent", "metadata": [], "label": "COHERENT"}
{"text": "radius percent { radius percent ;   radius percentage", "metadata": [], "label": "COHERENT"}
{"text": "set percent format string string format { percent formatter decimal format format ;   set format string percent label", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set label font font font { check argument font null { illegal argument exception pie plot set label font null font allowed ; } change label font equal font { label font font ; notify listener plot change event ;   set label font", "metadata": [], "label": "COHERENT"}
{"text": "pie dataset dataset { pie dataset chart dataset ;   dataset plot cast pie dataset", "metadata": [], "label": "COHERENT"}
{"text": "explode percent { check argument { illegal argument exception pie plot explode percent valid range ; } fetch result result ; explode percentage null { explode percentage length { result explode percentage ; } } result ;   amount exploded", "metadata": [], "label": "COHERENT"}
{"text": "pie tool generator tool generator { tool generator ;   tooltip generator", "metadata": [], "label": "COHERENT"}
{"text": "circular { circular ;   flag indicating pie chart circular stretched elliptical shape", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis null true ; false ;   true axis compatible pie plot false", "metadata": [], "label": "COHERENT"}
{"text": "interior gap percent { interior gap percent ;   interior gap measure percentage drawing space", "metadata": [], "label": "COHERENT"}
{"text": "label gap percent { label gap percent ;   label gap measure percentage radius", "metadata": [], "label": "COHERENT"}
{"text": "label type { label type ;   label type", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis vertical axis { vertical axis vertical axis ;   reference vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "maximum horizontal data { dataset data chart dataset ; data null { datasets maximum domain data ; } null ;   maximum domain range whichever displayed horizontal axis type plot implementing", "metadata": [], "label": "COHERENT"}
{"text": "vertical xy bar plot axis horizontal axis axis vertical axis inset inset paint background stroke outline stroke paint outline paint { horizontal axis vertical axis inset background outline stroke outline paint ;   construct vertical xy bar plot", "metadata": [], "label": "COHERENT"}
{"text": "draw outline background graphic rectangle { background paint null { set paint background paint ; fill ; } outline stroke null outline paint null { set stroke outline stroke ; set paint outline paint ; draw ;   draw plot outline background", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis true ; false ;   true axis compatible plot regard operating vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum datasource", "metadata": [], "label": "COHERENT"}
{"text": "axis changed axis change event event { notify listener plot change event ;   receives notification change plot ax", "metadata": [], "label": "COHERENT"}
{"text": "free chart chart { chart ;   reference chart plot belongs", "metadata": [], "label": "COHERENT"}
{"text": "vertical xy bar plot axis horizontal axis axis vertical axis { horizontal axis vertical axis plot inset plot background color plot outline stroke plot outline color ;   construct vertical xy bar plot", "metadata": [], "label": "COHERENT"}
{"text": "paint series paint { series paint series paint length ;   paint color shape series", "metadata": [], "label": "COHERENT"}
{"text": "axis domain axis { axis horizontal axis ;   convenience method horizontal axis cast axis", "metadata": [], "label": "COHERENT"}
{"text": "set outline paint paint paint { outline paint equal paint { outline paint paint ; notify listener plot change event ;   set color outline plot notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "add change listener plot change listener listener { listener add listener ;   register object notification change plot", "metadata": [], "label": "COHERENT"}
{"text": "stroke series stroke { series stroke series stroke length ;   stroke draw shape series", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis range axis { vertical axis vertical axis ;   convenience method vertical axis cast vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "maximum vertical data { dataset data chart dataset ; data null { datasets maximum range data ; } null ;   maximum datasource", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis true ; axis horizontal axis true ; false ;   true axis compatible plot regard operating horizontal axis", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint ;   background color plot", "metadata": [], "label": "COHERENT"}
{"text": "paint series outline paint { series outline paint series outline paint length ;   paint outline shape series", "metadata": [], "label": "COHERENT"}
{"text": "stroke series outline stroke { series outline stroke series outline paint length ;   stroke outline shape series", "metadata": [], "label": "COHERENT"}
{"text": "stroke outline stroke { outline stroke ;   pen brush outline plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set inset inset inset { inset equal inset { inset inset ; notify listener plot change event ;   set inset plot notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "axis axis select { select { horizontal axis horizontal axis ; vertical axis vertical axis ; null ;   axis", "metadata": [], "label": "COHERENT"}
{"text": "set series stroke stroke stroke { series stroke stroke ; notify listener plot change event ;   set stroke draw shape representing series notifies registered listener chart ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set background paint paint paint { background paint equal paint { background paint paint ; notify listener plot change event ;   set background color plot notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "shape shape series object category scale { rectangle scale scale scale scale ; ellipse scale scale scale scale ;   shape plotting data", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis horizontal axis { horizontal axis horizontal axis ;   reference horizontal axis", "metadata": [], "label": "COHERENT"}
{"text": "paint outline paint { outline paint ;   color draw outline plot", "metadata": [], "label": "COHERENT"}
{"text": "notify listener plot change event event { java util iterator iterator listener iterator ; iterator ha { plot change listener listener plot change listener iterator ; listener plot changed event ;   notifies registered listener plot ha modified", "metadata": [], "label": "COHERENT"}
{"text": "draw horizontal graphic rectangle data { draw horizontal horizontal null { ; horizontal size ; { set paint paint horizontal color ; set stroke basic stroke ; horizontal ; yint range axis translate java data ; draw yint data width yint ;   support method draw", "metadata": [], "label": "NOT_COHERENT"}
{"text": "draw vertical graphic rectangle data { draw vertical vertical null { ; vertical size ; { set paint paint vertical color ; set stroke basic stroke ; vertical ; xint domain axis translate java data ; draw xint xint data height ;   support method draw", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set xy item renderer xy item renderer renderer { renderer renderer ; notify listener plot change event ;   set item renderer notifies listener change plot", "metadata": [], "label": "COHERENT"}
{"text": "add horizontal { add horizontal color red ; notify listener plot change event ;   add horizontal data color red", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis { true ; } false ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "axis range axis { axis vertical axis ;   convenience method reference vertical axis cast axis", "metadata": [], "label": "COHERENT"}
{"text": "add horizontal location paint color { horizontal null { horizontal array list ; horizontal color array list ; } horizontal color add color ; horizontal add location ;   incoherencetype", "metadata": [], "label": "NOT_COHERENT"}
{"text": "axis domain axis { axis horizontal axis ;   convenience method reference horizontal axis cast axis", "metadata": [], "label": "COHERENT"}
{"text": "add vertical location { add vertical location color blue ;   add vertical location color blue", "metadata": [], "label": "COHERENT"}
{"text": "draw horizontal graphic rectangle data stroke stroke paint paint { yy range axis translate java data ; data min yy data max yy ; set stroke stroke ; set paint paint ; draw ;   utility method drawing crosshair chart", "metadata": [], "label": "NOT_COHERENT"}
{"text": "maximum horizontal data { dataset data chart dataset ; data null { datasets maximum domain data ; } null ;   maximum domain plotted horizontal axis xy plot", "metadata": [], "label": "COHERENT"}
{"text": "string plot type { xy plot ;   plot type string", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis horizontal axis { true ; } axis horizontal axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "xy dataset dataset { xy dataset chart dataset ;   convenience method dataset plot cast xy dataset", "metadata": [], "label": "COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted vertical axis xy plot", "metadata": [], "label": "COHERENT"}
{"text": "add vertical location paint color { vertical null { vertical array list ; vertical color array list ; } vertical color add color ; vertical add location ;   add vertical color location color", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis { null ;   construct vertical axis label attribute", "metadata": [], "label": "NOT_COHERENT"}
{"text": "object min { min ;   min range", "metadata": [], "label": "COHERENT"}
{"text": "object max { max ;   max range", "metadata": [], "label": "COHERENT"}
{"text": "object object { equal ;   true", "metadata": [], "label": "COHERENT"}
{"text": "axis range object min object max { min min ; max max ;   creates axis range object", "metadata": [], "label": "COHERENT"}
{"text": "combined chart dataset data plot plot { data plot null null false ;   standard constructor combined cart displaying dataset plot", "metadata": [], "label": "COHERENT"}
{"text": "label drawn vertical { label drawn vertical ;   flag axis label drawn vertical orientation", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis { null ;   construct vertical axis", "metadata": [], "label": "NOT_COHERENT"}
{"text": "set label drawn vertical flag { label drawn vertical flag { label drawn vertical flag ; notify listener axis change event ;   set flag control axis label drawn vertical orientation", "metadata": [], "label": "COHERENT"}
{"text": "configure { auto range { auto adjust range ;   configures axis plot", "metadata": [], "label": "NOT_COHERENT"}
{"text": "minimum vertical data { dataset data chart dataset ; data null { datasets minimum range data ; } null ;   minimum range plotted vertical axis bar plot", "metadata": [], "label": "COHERENT"}
{"text": "compatible horizontal axis axis axis { axis category axis { true ; } false ;   check compatibility horizontal axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "axis range axis { axis vertical axis ;   range axis", "metadata": [], "label": "COHERENT"}
{"text": "string plot type { bar plot ;   string describing type plot", "metadata": [], "label": "COHERENT"}
{"text": "set renderer vertical bar renderer renderer { renderer renderer ; notify listener plot change event ;   set renderer bar plot", "metadata": [], "label": "COHERENT"}
{"text": "shape calculate background plot rectangle plot { plot ;   chart background", "metadata": [], "label": "NOT_COHERENT"}
{"text": "maximum vertical data { dataset data chart dataset ; data null { datasets maximum range data ; } null ;   maximum domain range whichever displayed vertical axis type plot implementing", "metadata": [], "label": "COHERENT"}
{"text": "java util list category { dataset category ;   convenience method list category dataset", "metadata": [], "label": "COHERENT"}
{"text": "vertical bar plot category axis horizontal axis axis vertical axis { horizontal axis vertical axis plot inset bar plot intro gap percent bar plot trail gap percent bar plot category gap percent bar plot item gap percent null   construct vertical bar plot", "metadata": [], "label": "COHERENT"}
{"text": "category dataset dataset { category dataset chart dataset ;   convenience method dataset plot cast category dataset", "metadata": [], "label": "COHERENT"}
{"text": "draw outline background graphic shape { background paint null { set paint background paint ; fill ; } outline stroke null outline paint null { set stroke outline stroke ; set paint outline paint ; draw ;   draw plot outline background", "metadata": [], "label": "COHERENT"}
{"text": "set crosshair visible flag { crosshair visible flag { crosshair visible flag ; notify listener axis change event ;   set flag indicating crosshair visible axis", "metadata": [], "label": "COHERENT"}
{"text": "set grid visible flag { grid visible flag { grid visible flag ; notify listener axis change event ;   set visibility grid notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "set crosshair { crosshair ; notify listener axis change event ;   set crosshair axis", "metadata": [], "label": "COHERENT"}
{"text": "minimum axis { minimum axis ;   minimum axis", "metadata": [], "label": "COHERENT"}
{"text": "set anchor { anchor ; notify listener axis change event ;   set anchor axis", "metadata": [], "label": "COHERENT"}
{"text": "paint crosshair paint { crosshair paint ;   grid color", "metadata": [], "label": "NOT_COHERENT"}
{"text": "stroke crosshair stroke { crosshair stroke ;   stroke draw crosshair", "metadata": [], "label": "COHERENT"}
{"text": "crosshair { crosshair ;   crosshair", "metadata": [], "label": "COHERENT"}
{"text": "maximum axis { maximum axis ;   maximum axis", "metadata": [], "label": "COHERENT"}
{"text": "crosshair visible { crosshair visible ;   flag indicating crosshair visible axis", "metadata": [], "label": "COHERENT"}
{"text": "set grid paint paint paint { check argument paint null { illegal argument exception axis set grid paint null permitted ; } grid paint paint ; notify listener axis change event ;   set paint color grid notifies registered listener axis ha modified", "metadata": [], "label": "COHERENT"}
{"text": "auto tick unit selection { auto tick unit selection ;   flag indicating tick unit automatically selected range standard tick unit", "metadata": [], "label": "COHERENT"}
{"text": "stroke grid stroke { grid stroke ;   stroke draw grid", "metadata": [], "label": "COHERENT"}
{"text": "set minimum axis { minimum axis { minimum axis ; auto range false ; notify listener axis change event ;   set minimum axis", "metadata": [], "label": "COHERENT"}
{"text": "set crosshair locked data flag { crosshair locked data flag { crosshair locked data flag ; notify listener axis change event ;   set flag indicating crosshair lock actual data", "metadata": [], "label": "COHERENT"}
{"text": "auto range { auto range ;   true axis range automatically adjusted fit data false", "metadata": [], "label": "COHERENT"}
{"text": "anchor { anchor ;   anchor axis", "metadata": [], "label": "COHERENT"}
{"text": "add tick unit unit { unit add unit ; collection sort unit ;   add tick unit collection", "metadata": [], "label": "COHERENT"}
{"text": "ha item gap { true ;   true gap bar representation", "metadata": [], "label": "COHERENT"}
{"text": "ha item gap { true ;   true renderer gap item category", "metadata": [], "label": "COHERENT"}
{"text": "bar width category category dataset data { data series count ;   bar width displayed category", "metadata": [], "label": "COHERENT"}
{"text": "compatible plot plot plot { plot category plot true ; false ;   true plot compatible axis false", "metadata": [], "label": "COHERENT"}
{"text": "vertical category axis string label { label axis axis label font axis axis label paint axis tick label inset true vertical label true category label visible axis tick label font axis tick label paint axis tick label inset false tick mark visible axis tick stroke ;   construct vertical category axis attribute", "metadata": [], "label": "COHERENT"}
{"text": "vertical bar plot category axis horizontal axis axis vertical axis { horizontal axis vertical axis plot inset null ;   construct vertical bar plot", "metadata": [], "label": "COHERENT"}
{"text": "vertical bar plot category axis horizontal axis axis vertical axis inset inset intro gap trail gap category gap series gap category tool generator tool generator { horizontal axis vertical axis inset intro gap trail gap category gap series gap tool generator ;   construct vertical bar plot", "metadata": [], "label": "COHERENT"}
{"text": "string title { title ;   title text", "metadata": [], "label": "COHERENT"}
{"text": "add change listener title change listener listener { listener add listener ;   register object notification change title", "metadata": [], "label": "COHERENT"}
{"text": "remove change listener title change listener listener { listener remove listener ;   unregisters object notification change chart title", "metadata": [], "label": "COHERENT"}
{"text": "chart change event object source free chart chart { source chart ;   standard constructor chart change event object type", "metadata": [], "label": "COHERENT"}
{"text": "chart change event object source { source null ;   standard constructor chart change event object type", "metadata": [], "label": "COHERENT"}
{"text": "free chart chart { chart ;   reference chart generated change event", "metadata": [], "label": "COHERENT"}
{"text": "axis change event axis axis { axis ; axis axis ;   constructor axis change event", "metadata": [], "label": "COHERENT"}
{"text": "set range axis range range { set auto range false ; set minimum range min ; set maximum range max ; visible { horizontal axis axis horizontal axis parent axis ; axis set auto range false ; axis set minimum range min ; axis set maximum range max ;   set axis range", "metadata": [], "label": "COHERENT"}
{"text": "set visible flag { visible flag ;   set visible flag combined axis", "metadata": [], "label": "COHERENT"}
{"text": "reserve height graphic plot plot rectangle draw { visible { ; } reserve height { reserve height ; } { axis reserve height plot draw ;   height required draw axis draw", "metadata": [], "label": "COHERENT"}
{"text": "axis parent axis { axis ;   parent axis", "metadata": [], "label": "COHERENT"}
{"text": "rectangle reserve axis graphic plot plot rectangle draw reserved width { visible { axis reserve axis plot draw reserved width ; } { rectangle ;   axis displayed", "metadata": [], "label": "COHERENT"}
{"text": "reserve height graphic plot plot rectangle draw { iterator iter ax iterator ; iter ha { horizontal axis axis horizontal axis iter ; height axis reserve height plot draw ; height { height ; } } ;   height required draw axis draw", "metadata": [], "label": "COHERENT"}
{"text": "axis range range { plot range ax ;   axis range axis", "metadata": [], "label": "COHERENT"}
{"text": "axis range range { auto adjust range ; axis range minimum axis maximum axis ;   axis range axis", "metadata": [], "label": "COHERENT"}
{"text": "rectangle reserve axis graphic plot plot rectangle draw reserved height { rectangle draw draw reserve width plot draw draw height reserved height ;   axis displayed", "metadata": [], "label": "COHERENT"}
{"text": "axis parent axis { axis ;   parent axis", "metadata": [], "label": "COHERENT"}
{"text": "combined vertical axis vertical axis axis { axis true ;   construct visible combined vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "set range axis range range { set auto range false ; min range min ; max range max ; set minimum axis min ; set maximum axis max ; visible { vertical axis axis vertical axis parent axis ; axis set auto range false ; axis set minimum axis min ; axis set maximum axis max ;   set axis range", "metadata": [], "label": "COHERENT"}
{"text": "reserve width graphic plot plot rectangle draw { visible { ; } reserve width { reserve width ; } { axis reserve width plot draw ;   width required draw biggest axis combined vertical axis draw", "metadata": [], "label": "COHERENT"}
{"text": "primitive object { primitive ;   creates object time primitive accessed slow", "metadata": [], "label": "COHERENT"}
{"text": "object primitive { object ;   generated object previous method", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rectangle adjust inset rectangle draw inset inset { inset null { rectangle draw inset left draw inset top draw width inset left inset draw height inset top inset bottom ; } { draw ;   utility method adjust rectangle inset", "metadata": [], "label": "COHERENT"}
{"text": "series item { translate item ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rectangle plot { plot ;   plot calculated", "metadata": [], "label": "COHERENT"}
{"text": "string series series { series { cosine ; } series { sine ; } error ;   series", "metadata": [], "label": "COHERENT"}
{"text": "series item { series { math translate item ; } math sin translate item ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "adjust plot min max { adjust plot min max type horizontal type vertical ;   adjusts ax range", "metadata": [], "label": "COHERENT"}
{"text": "combined plot axis horizontal axis vertical { horizontal vertical ; type overlaid ; set inset inset ;   creates overlaid combined plot", "metadata": [], "label": "COHERENT"}
{"text": "sample xy dataset { translate ;   constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "adjust plot { adjust plot ax wrap combined xxxxx axis overlaid xxxx axis object adjust plot axis ; adjust plot axis min max display plot adjust plot min max ; adjust paint stroke plot adjust series paint stroke ;   adjusts chart combine changing axis rescaling account combined plot", "metadata": [], "label": "COHERENT"}
{"text": "set range axis range range java util list ax { iterator iter ax iterator ; iter ha { combinable axis axis combinable axis iter ; axis set range range ;   set axis range ax list", "metadata": [], "label": "COHERENT"}
{"text": "maximum horizontal data { chart size { null ; } max min ; iterator iter chart iterator ; iter ha { chart info chart info chart info iter ; horizontal plot plot horizontal plot chart info plot ; plot maximum horizontal data ; max { max ; } } max ;   maximum domain chart plotted horizontal axis combined plot", "metadata": [], "label": "COHERENT"}
{"text": "compatible vertical axis axis axis { axis vertical axis ;   check compatibility vertical axis returning true axis compatible plot false", "metadata": [], "label": "COHERENT"}
{"text": "minimum horizontal data { chart size { null ; } min max ; iterator iter chart iterator ; iter ha { chart info chart info chart info iter ; horizontal plot plot horizontal plot chart info plot ; plot minimum horizontal data ; min { min ; } } min ;   minimum domain chart plotted horizontal axis combined plot", "metadata": [], "label": "COHERENT"}
{"text": "add combined chart chart axis compatible exception { add chart ;   add combined chart combined plot", "metadata": [], "label": "COHERENT"}
{"text": "adjust plot axis { adjusted { adjust plot axis true true ;   adjusts internal chart automatic rendering conponents", "metadata": [], "label": "COHERENT"}
{"text": "java util list vertical ax { vertical ax false ;   list vertical ax", "metadata": [], "label": "COHERENT"}
{"text": "axis range range java util list ax { axis range range null ; iterator iter ax iterator ; iter ha { combinable axis axis combinable axis iter ; range null { range axis range ; } { range combine axis range ; } } range ;   axis range ax list", "metadata": [], "label": "COHERENT"}
{"text": "horizontal axis visible plot plot plot plot { type horizontal { true ; } plot { true ; } { false ;   true horizontal axis visible", "metadata": [], "label": "COHERENT"}
{"text": "maximum vertical data { chart size { null ; } max min ; iterator iter chart iterator ; iter ha { chart info chart info chart info iter ; vertical plot plot vertical plot chart info plot ; plot maximum vertical data ; max { max ; } } max ;   maximum displayed vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "minimum vertical data { chart size { null ; } min max ; iterator iter chart iterator ; iter ha { chart info chart info chart info iter ; vertical plot plot vertical plot chart info plot ; plot minimum vertical data ; min { min ; } } min ;   minimum displayed vertical axis", "metadata": [], "label": "COHERENT"}
{"text": "string series series { series { ibm ; } error ;   series", "metadata": [], "label": "NOT_COHERENT"}
{"text": "string plot type { type { overlaid overlaid plot ; horizontal horizontal combined plot ; vertical vertical combined plot ; unknown combined plot ;   plot type string", "metadata": [], "label": "COHERENT"}
{"text": "adjust series paint stroke { chart null { series dataset master data series dataset chart dataset ; adjust series paint stroke master data ;   adjusts stroke paint object plot series combined dataset series drawn rendering object matter plot appears", "metadata": [], "label": "COHERENT"}
{"text": "vertical axis visible plot plot plot plot { type vertical { true ; } plot { true ; } { false ;   true vertical axis visible", "metadata": [], "label": "COHERENT"}
{"text": "set axis range set type flag { axis range set type flag ; iterator iter chart iterator ; iter ha { chart info chart info chart info iter ; plot plot chart info plot ; plot combined plot { combined plot plot set axis range set type flag ;   recursively set axis range set type flag true combined plot plot", "metadata": [], "label": "COHERENT"}
{"text": "chart changed chart change event event { readjust plot min max axis range set horizontal axis range set vertical ;   receives notification change chart", "metadata": [], "label": "COHERENT"}
{"text": "rectangle reserve axis graphic plot plot rectangle draw reserved width { visible { axis reserve axis plot draw reserved width ; } { rectangle ;   axis displayed", "metadata": [], "label": "COHERENT"}
{"text": "visible { visible ;   axis visible drawn", "metadata": [], "label": "NOT_COHERENT"}
{"text": "reserve height graphic plot plot rectangle draw { visible { ; } reserve height { reserve height ; } { axis reserve height plot draw ;   height required draw axis draw", "metadata": [], "label": "COHERENT"}
{"text": "axis range range { auto adjust range ; axis range minimum axis maximum axis ;   axis range axis", "metadata": [], "label": "COHERENT"}
{"text": "low series item { series { low item ; } null ;   low series item", "metadata": [], "label": "COHERENT"}
{"text": "series item { series { item ; } null ;   series item", "metadata": [], "label": "COHERENT"}
{"text": "series item { series { item ; } null ;   series item", "metadata": [], "label": "COHERENT"}
{"text": "series item { series { close item ; } null ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "axis parent axis { axis ;   parent axis", "metadata": [], "label": "COHERENT"}
{"text": "item count series { ; series item sample   item series", "metadata": [], "label": "COHERENT"}
{"text": "sample low dataset { initialise data ;   constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series count { ;   series data source sample", "metadata": [], "label": "COHERENT"}
{"text": "series item { item time ;   series item", "metadata": [], "label": "NOT_COHERENT"}
{"text": "rectangle reserve axis graphic plot plot rectangle draw reserved width { rectangle empty rectangle ; iterator iter ax iterator ; iter ha { vertical axis axis vertical axis iter ; rectangle axis reserve axis plot draw reserved width ; equal empty { ; } } empty ;   axis displayed", "metadata": [], "label": "COHERENT"}
{"text": "reserve width graphic plot plot rectangle draw { iterator iter ax iterator ; iter ha { vertical axis axis vertical axis iter ; width axis reserve width plot draw ; width { width ; } } ;   width required draw axis draw", "metadata": [], "label": "COHERENT"}
{"text": "axis range range { plot range ax ;   axis range axis", "metadata": [], "label": "COHERENT"}
{"text": "rectangle reserve axis graphic plot plot rectangle draw reserved width { rectangle empty rectangle ; iterator iter ax iterator ; iter ha { horizontal axis axis horizontal axis iter ; rectangle axis reserve axis plot draw reserved width ; equal empty { ; } } empty ;   axis displayed", "metadata": [], "label": "COHERENT"}
{"text": "color color color { color { color white ; color black ; color blue ; color green ; color red ; color yellow ; color gray ; color orange ; color cyan ; color magenta ; color pink ; color white ;   utility method color", "metadata": [], "label": "COHERENT"}
{"text": "init servlet config config servlet exception { init config ; save servlet context context config servlet context ;   init set data invocation servlet", "metadata": [], "label": "COHERENT"}
{"text": "create month day { gregorian calendar calendar gregorian calendar month day ; calendar time ;   java util month day", "metadata": [], "label": "COHERENT"}
{"text": "sample xy dataset { series ; series series count ; series { item ; item item count ; item { math random range ; series item ; series item math random ;   constructor", "metadata": [], "label": "NOT_COHERENT"}
{"text": "series item { series item ;   series item", "metadata": [], "label": "COHERENT"}
{"text": "series item { series item ;   series item", "metadata": [], "label": "COHERENT"}
{"text": "string series series { sample series ;   series", "metadata": [], "label": "COHERENT"}
{"text": "series count { series count ;   series data source", "metadata": [], "label": "COHERENT"}
{"text": "tool string text shape { check argument null illegal argument exception tool null ; text text ; ;   construct tooltip", "metadata": [], "label": "COHERENT"}
{"text": "standard tool collection { tooltips array list ;   construct tooltip collection", "metadata": [], "label": "COHERENT"}
{"text": "add tool string text shape { tool tooltip tool text ; tooltips add tooltip ;   add tooltip", "metadata": [], "label": "COHERENT"}
{"text": "tool { tooltips ;   tooltips", "metadata": [], "label": "COHERENT"}
{"text": "plot property edit panel plot property edit panel { plot property panel ;   reference plot property panel", "metadata": [], "label": "COHERENT"}
{"text": "action performed action event event { string command event action command ; command equal background paint { attempt modify background paint ;   handle user interaction panel", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify background paint { color ; color chooser dialog background color color blue ; null { background set paint ;   user opportunity select background paint", "metadata": [], "label": "COHERENT"}
{"text": "tick mark visible { tick mark check box selected ;   current flag determines tick mark visible", "metadata": [], "label": "COHERENT"}
{"text": "paint tick label paint { tick label paint sample paint ;   current tick label paint", "metadata": [], "label": "COHERENT"}
{"text": "tabbed pane tab { tab ;   reference tabbed pane", "metadata": [], "label": "COHERENT"}
{"text": "edit label inset { inset chooser panel panel inset chooser panel label inset ; result option pane confirm dialog panel edit inset option pane cancel option option pane plain message ; result option pane option { label inset panel inset ; label inset text field set inset label inset ;   inset chooser panel allowing user modify label individual inset", "metadata": [], "label": "COHERENT"}
{"text": "tick label visible { tick label check box selected ;   flag tick label visible", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint sample paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt outline stroke selection { stroke chooser panel panel stroke chooser panel null stroke sample ; result option pane confirm dialog panel stroke selection option pane cancel option option pane plain message ; result option pane option { outline stroke sample set stroke panel selected stroke ;   user change outline stroke", "metadata": [], "label": "COHERENT"}
{"text": "edit inset { inset chooser panel panel inset chooser panel inset ; result option pane confirm dialog panel edit inset option pane cancel option option pane plain message ; result option pane option { inset panel inset ; inset text field set inset inset ;   user edit individual inset", "metadata": [], "label": "COHERENT"}
{"text": "attempt grid stroke selection { stroke chooser panel panel stroke chooser panel null stroke sample ; result option pane confirm dialog panel stroke selection option pane cancel option option pane plain message ; result option pane option { grid stroke sample set stroke panel selected stroke ;   handle grid stroke selection", "metadata": [], "label": "COHERENT"}
{"text": "maximum { maximum ;   current setting maximum axis range", "metadata": [], "label": "COHERENT"}
{"text": "minimum { minimum ;   current setting minimum axis range", "metadata": [], "label": "COHERENT"}
{"text": "attempt grid paint selection { color ; color chooser dialog grid color color blue ; null { grid paint sample set paint ;   handle grid paint selection", "metadata": [], "label": "COHERENT"}
{"text": "auto range { auto range ;   current setting auto range property", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify series paint { color ; color chooser dialog series label color color blue ; null { series paint set paint ;   user opportunity change series label paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify series font { font chooser panel panel font chooser panel series font ; result option pane confirm dialog panel font selection option pane cancel option option pane plain message ; result option pane option { series font panel selected font ;   user opportunity change series label font", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify background paint { color ; color chooser dialog background color color blue ; null { background paint set paint ;   user opportunity change background paint", "metadata": [], "label": "COHERENT"}
{"text": "paint outline paint { outline paint paint ;   current outline paint", "metadata": [], "label": "COHERENT"}
{"text": "attempt modify outline paint { color ; color chooser dialog outline color color blue ; null { outline paint set paint ;   user opportunity change outline paint", "metadata": [], "label": "COHERENT"}
{"text": "paint background paint { background paint paint ;   current background paint", "metadata": [], "label": "COHERENT"}
{"text": "stroke outline stroke { outline stroke stroke ;   current outline stroke", "metadata": [], "label": "COHERENT"}
{"text": "font series font { series font ;   current series label font", "metadata": [], "label": "COHERENT"}
{"text": "font title font { title font ;   font selected panel", "metadata": [], "label": "COHERENT"}
{"text": "paint title paint { title paint paint ;   paint selected panel", "metadata": [], "label": "COHERENT"}
